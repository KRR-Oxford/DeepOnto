Search.setIndex({"docnames": ["deeponto", "deeponto.bert", "deeponto.bert.static", "deeponto.bert.train", "deeponto.config", "deeponto.data", "deeponto.data.align", "deeponto.data.infer", "deeponto.data.infer.subs", "deeponto.evaluation", "deeponto.models", "deeponto.models.align", "deeponto.models.align.logmap_java", "deeponto.models.align.logmap_java.java-dependencies", "deeponto.models.infer", "deeponto.models.infer.deprecated", "deeponto.onto", "deeponto.onto.graph", "deeponto.onto.logic", "deeponto.onto.logic.parser", "deeponto.onto.prune", "deeponto.onto.text", "deeponto.utils", "index", "modules"], "filenames": ["deeponto.rst", "deeponto.bert.rst", "deeponto.bert.static.rst", "deeponto.bert.train.rst", "deeponto.config.rst", "deeponto.data.rst", "deeponto.data.align.rst", "deeponto.data.infer.rst", "deeponto.data.infer.subs.rst", "deeponto.evaluation.rst", "deeponto.models.rst", "deeponto.models.align.rst", "deeponto.models.align.logmap_java.rst", "deeponto.models.align.logmap_java.java-dependencies.rst", "deeponto.models.infer.rst", "deeponto.models.infer.deprecated.rst", "deeponto.onto.rst", "deeponto.onto.graph.rst", "deeponto.onto.logic.rst", "deeponto.onto.logic.parser.rst", "deeponto.onto.prune.rst", "deeponto.onto.text.rst", "deeponto.utils.rst", "index.rst", "modules.rst"], "titles": ["deeponto package", "deeponto.bert package", "deeponto.bert.static package", "deeponto.bert.train package", "deeponto.config package", "deeponto.data package", "deeponto.data.align package", "deeponto.data.infer package", "deeponto.data.infer.subs package", "deeponto.evaluation package", "deeponto.models package", "deeponto.models.align package", "deeponto.models.align.logmap_java package", "deeponto.models.align.logmap_java.java-dependencies package", "deeponto.models.infer package", "deeponto.models.infer.deprecated package", "deeponto.onto package", "deeponto.onto.graph package", "deeponto.onto.logic package", "deeponto.onto.logic.parser package", "deeponto.onto.prune package", "deeponto.onto.text package", "deeponto.utils package", "Welcome to DeepOnto\u2019s documentation!", "deeponto"], "terms": {"bert": [0, 11, 21, 23, 24], "static": [0, 1, 3, 4, 6, 10, 11, 16, 18, 19, 20, 21, 22], "bert_static_bas": [0, 1], "bert_static_emb": [0, 1], "bert_static_seq_classifi": [0, 1], "bert_static_sub": [0, 1], "train": [0, 1, 2, 7, 10, 11, 14, 15, 22], "bert_train_bas": [0, 1], "bert_train_seq_classfi": [0, 1], "bert_train_sub": [0, 1], "bert_arg": [0, 2, 3, 11, 24], "bertargu": [0, 1, 2, 3, 11], "generate_training_arg": [0, 1], "config": [0, 7, 14, 16, 23, 24], "input_config": [0, 24], "inputconfig": [0, 4], "add_param_group": [0, 4], "edit_config": [0, 4], "load_config": [0, 4], "new_config": [0, 4], "preview_and_sav": [0, 4], "data": [0, 3, 11, 16, 22, 23, 24], "align": [0, 5, 10, 17, 21], "cand_map": [0, 5, 16], "subs_map": [0, 5], "text_semantics_corpora": [0, 5], "infer": [0, 5, 10, 18], "infer_util": [0, 5], "evalu": [0, 11, 23, 24], "align_ev": [0, 24], "global_match_ev": [0, 9], "global_match_select": [0, 9], "local_rank_ev": [0, 9], "pred_threshold": [0, 9], "eval_metr": [0, 24], "f1": [0, 9], "f_score": [0, 9], "hits_at_k": [0, 9], "mean_reciprocal_rank": [0, 9], "precis": [0, 9], "recal": [0, 9], "model": [0, 1, 2, 3, 9, 22, 23, 24], "align_bas": [0, 10], "align_pipelin": [0, 10], "bertmap": [0, 6, 10, 21], "edit_sim": [0, 10], "string_match": [0, 10], "infer_pipelin": [0, 10], "pipeline_bas": [0, 24], "ontopipelinebas": [0, 10, 11], "complete_path": [0, 10], "from_sav": [0, 10, 16, 24], "load_model": [0, 1, 2, 3, 10, 11], "load_onto": [0, 10, 11], "run": [0, 10, 11, 14, 15, 16, 20, 22], "onto": [0, 6, 8, 11, 23, 24], "graph": [0, 16, 21], "graph_util": [0, 16], "iter_map_extend": [0, 16], "logic": [0, 16, 21], "logic_util": [0, 16], "reason": [0, 16], "prune": [0, 16], "text": [0, 2, 6, 8, 16, 19], "text_util": [0, 16], "thesauru": [0, 6, 16], "token": [0, 2, 3, 6, 11, 14, 16], "iri": [0, 6, 8, 11, 18, 19, 21, 22, 24], "map": [0, 6, 11, 17, 21, 22, 24], "anchormap": [0, 16], "add_candid": [0, 16], "anchoredontomap": [0, 6, 9, 16], "add": [0, 3, 6, 16, 17, 21, 22], "add_mani": [0, 16], "existed_cands_for_anchor": [0, 16], "fill_scored_map": [0, 16], "flatten": [0, 16], "read_table_map": [0, 16], "save_inst": [0, 5, 6, 16, 24], "to_df": [0, 16], "unscored_cand_map": [0, 16], "validate_anchor_map": [0, 16], "entitymap": [0, 16], "to_tupl": [0, 16], "entitymappinglist": [0, 11, 16], "append": [0, 16], "sort": [0, 16, 22], "topk": [0, 16], "ontomap": [0, 6, 9, 11, 16, 17, 21], "is_existed_map": [0, 16], "topks_for_": [0, 16], "validate_map": [0, 16], "ontologi": [0, 3, 6, 8, 9, 10, 11, 17, 18, 20, 21, 22, 24], "build_inv_idx": [0, 16], "class": [0, 1, 2, 3, 4, 6, 7, 8, 10, 11, 15, 16, 17, 18, 19, 20, 21, 22], "from_new": [0, 16, 24], "idf_select": [0, 16, 21], "name_from_iri": [0, 16], "obj_from_iri": [0, 16], "path_select": [0, 16], "search_ent_lab": [0, 16], "sib_lab": [0, 16, 21], "ontology_sub": [0, 24], "ontologysub": [0, 16], "complement_iri_name_to_label": [0, 16], "get_all_restriction_ancestor": [0, 16], "get_declared_named_class_subsumpt": [0, 16], "get_declared_restriction_subsumpt": [0, 16], "get_named_class": [0, 16], "get_negative_sampl": [0, 16], "get_one_hop_neighbour": [0, 16], "is_normal_named_class": [0, 16], "is_target_some_restrict": [0, 16], "path_subsumpt": [0, 16], "restriction_to_label": [0, 16], "set_masked_subsumpt": [0, 16], "subclass_to_str": [0, 16], "subsumption_to_str": [0, 16], "subsumptions_to_sampl": [0, 16], "supclass_to_sampl": [0, 16], "traversal_subsumpt": [0, 16], "util": [0, 17, 20, 23, 24], "general_util": [0, 24], "create_path": [0, 22], "data_split": [0, 22], "detect_path": [0, 22], "evenly_divid": [0, 22], "get_devic": [0, 22], "load_prompt_data": [0, 22], "parse_tupl": [0, 22], "print_choic": [0, 22], "rand_sample_excl": [0, 22], "read_jsonl": [0, 22], "read_tabl": [0, 22], "run_jar": [0, 22], "set_se": [0, 22], "sort_dict_by_valu": [0, 22], "split_java_identifi": [0, 22], "to_identifi": [0, 22], "uniqifi": [0, 22], "log": [0, 24], "runtimeformatt": [0, 22], "formattim": [0, 22], "banner_msg": [0, 22], "create_logg": [0, 22], "credit": [0, 22], "oaei_util": [0, 24], "read_oaei_map": [0, 22], "tree": [0, 19, 24], "rangenod": [0, 19, 22], "insert_child": [0, 22], "print_tre": [0, 22], "sort_by_start": [0, 22], "super": [0, 17, 18, 22], "object": [0, 1, 2, 3, 6, 8, 10, 11, 15, 16, 17, 18, 19, 20, 21], "need": [0, 8, 21], "switch": [0, 24], "src2tgt": [0, 6, 11, 16], "tgt2src": [0, 6, 11], "flag": [0, 6, 9, 11, 16], "flaggedobj": [0, 6, 11, 23, 24], "src_onto": [0, 6, 11, 17, 21, 22], "tgt_onto": [0, 6, 11, 17, 21, 22], "sourc": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22], "base": [0, 1, 2, 3, 4, 6, 7, 8, 10, 11, 15, 16, 17, 18, 19, 20, 21, 22], "renew": [0, 17, 24], "direct": [0, 6, 16, 18], "can": 0, "creat": [0, 11, 16, 22], "from": [0, 2, 3, 4, 6, 7, 8, 11, 16, 19, 20, 21, 22], "new": [0, 4, 8, 11, 16, 17], "save": [0, 4, 6, 7, 8, 11, 16, 18, 22], "savedobj": [0, 4, 6, 10, 16, 21, 23, 24], "saved_nam": 0, "copy2": [0, 24], "destin": 0, "classmethod": [0, 4, 11, 16, 21], "arg": [0, 14, 19, 22], "kwarg": [0, 22], "constructor": 0, "instanc": [0, 16], "saved_path": [0, 6, 8, 10, 11, 16, 18, 20, 22], "load": [0, 2, 3, 4, 6, 7, 10, 11, 16, 22], "load_json": [0, 24], "str": [0, 1, 2, 3, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22], "dict": [0, 2, 4, 7, 11, 15, 16, 21, 22], "load_pkl": [0, 24], "pickl": 0, "part": [0, 8, 11, 19], "print_json": [0, 24], "json_obj": 0, "report": [0, 24], "root_nam": 0, "option": [0, 1, 2, 3, 6, 7, 8, 9, 10, 11, 15, 16, 17, 19, 20, 21, 22], "none": [0, 1, 2, 3, 6, 8, 9, 11, 14, 16, 17, 19, 21, 22], "gener": [0, 6, 8, 9, 16, 21, 22], "xml": 0, "current": [0, 11, 16], "local": [0, 16, 17], "save_json": [0, 24], "sort_kei": 0, "bool": [0, 1, 2, 3, 6, 7, 8, 9, 10, 11, 15, 16, 17, 18, 19, 20, 21, 22], "fals": [0, 2, 3, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 21], "save_pkl": [0, 24], "obj": [0, 7], "init_jvm": [0, 23, 24], "memori": 0, "bertstaticbas": [1, 2], "proc_input": [1, 2], "bertstaticforembed": [1, 2], "ontotext_emb": [1, 2], "sent_embeds_cl": [1, 2], "sent_embeds_mean": [1, 2], "word_emb": [1, 2], "bertstaticforsequenceclassif": [1, 2], "bertstaticsub": [1, 2], "berttrainerbas": [1, 3], "compute_metr": [1, 3], "load_dataset": [1, 3], "berttrainerforsequenceclassif": [1, 3], "berttrainersub": [1, 3], "add_special_token": [1, 3], "input": [1, 2, 3, 4, 8, 10, 20, 21], "argument": [1, 3], "bert_checkpoint": [1, 2, 3], "output_dir": [1, 11], "num_epoch": 1, "float": [1, 9, 11, 16, 17], "batch_size_for_train": 1, "int": [1, 2, 3, 6, 8, 9, 11, 15, 16, 17, 21, 22], "batch_size_for_predict": 1, "max_length": [1, 2, 3], "device_num": [1, 15, 22], "early_stop_pati": [1, 3], "resume_from_ckp": 1, "union": [1, 6], "training_data_s": 1, "metric_for_best_model": 1, "greater_is_bett": 1, "trainingargu": [1, 3], "bertstat": 2, "handl": [2, 16], "embed": 2, "pre": [2, 3, 16], "fine": [2, 3, 11], "tune": [2, 3, 11], "eval": [2, 9], "mode": [2, 11], "here": 2, "mean": [2, 9, 11], "gradient": 2, "shift": 2, "happen": 2, "sent": 2, "list": [2, 3, 6, 7, 9, 11, 14, 15, 16, 17, 18, 20, 21, 22], "process": [2, 11, 16, 21], "them": [2, 6, 11, 20], "devic": [2, 22], "classtexts_batch": 2, "strategi": [2, 6], "neg_layer_num": 2, "1": [2, 6, 8, 9, 11, 16, 17, 19, 21, 22], "assum": [2, 18, 21], "each": [2, 6, 11, 16, 21], "sentenc": [2, 3], "describ": 2, "entiti": [2, 6, 11, 16, 17, 18, 20, 21], "independ": [2, 21], "equal": [2, 9], "i": [2, 3, 6, 7, 8, 9, 16, 17, 18, 19, 21, 22], "intuit": 2, "take": [2, 16], "sent_emb": 2, "text_sent": 2, "its": [2, 11, 16, 18, 20, 21], "thi": [2, 6, 16, 17], "method": [2, 6, 20, 21], "deal": 2, "batch": [2, 11], "classtext": [2, 3], "cl": [2, 16, 20], "specifi": [2, 6, 11, 16, 22], "layer": 2, "word": [2, 15, 16, 21, 22], "neg": [2, 6, 8, 18, 21], "number": [2, 6, 16, 21, 22], "e": [2, 3, 8, 9, 19, 21, 22], "g": [2, 3, 19, 21, 22], "last": 2, "default": [2, 16, 19], "bio_clinicalbert": 2, "tokenizer_path": 2, "with_classifi": 2, "128": [2, 3], "trainer": [3, 10, 14], "train_data": 3, "val_data": 3, "test_data": 3, "pred": [3, 9], "keep": [3, 16, 19], "more": [3, 17, 21], "metric": [3, 9], "record": [3, 11, 22], "dataset": [3, 7, 8, 14, 15, 22], "val": [3, 22], "test": [3, 7, 9, 11, 14, 15, 22], "transform": [3, 7, 16, 22], "pair": [3, 6, 7, 8, 11, 16, 17, 21], "extract": [3, 8, 16, 19, 21], "code": 3, "inspir": 3, "http": [3, 9, 16, 19], "huggingfac": [3, 7, 8, 21, 22], "co": 3, "html": 3, "tupl": [3, 6, 8, 9, 11, 16, 19, 21, 22], "ani": [3, 10, 11, 21, 22], "For": [3, 21], "sequenc": 3, "classif": 3, "we": [3, 6, 11, 21], "have": [3, 6, 11, 18, 21, 22], "two": [3, 4, 8, 18, 19, 21], "sent1": 3, "sent2": 3, "cls_label": 3, "early_stop": 3, "10": [3, 9, 11, 17, 21, 22], "addit": 3, "special": [3, 16], "param": [3, 4], "sub": [3, 5, 6, 7, 16, 17, 18, 20, 21], "eoa": 3, "eoc": 3, "batch_siz": [3, 11], "1024": 3, "512": 3, "count_token_s": 3, "train_arg": 3, "do_fine_tun": 3, "true": [3, 6, 7, 8, 11, 16, 17, 20, 21, 22], "initi": 3, "start": [3, 6, 22], "": [3, 6, 8, 11, 16, 22], "when": [3, 9, 16, 21], "set": [3, 4, 7, 11, 17, 21, 22], "just": 3, "some": [3, 17], "checkpoint": 3, "without": [3, 22], "further": 3, "configur": 4, "param_dict": 4, "construct": [4, 6, 11, 16], "group": [4, 16, 21], "maximum": [4, 16, 17], "level": [4, 16, 21], "config_json_path": 4, "edit": [4, 11], "exist": [4, 7, 16, 22], "through": 4, "command": [4, 11, 22], "line": 4, "up": [4, 17], "templat": [4, 14, 15], "submodul": [5, 23, 24], "mappingcandidategener": [5, 6], "avoided_family_of": [5, 6], "current_anchor_map": [5, 6], "current_ref_dict": [5, 6], "idf_sampl": [5, 6], "init_anchor": [5, 6], "mixed_sampl": [5, 6], "neighbour_sampl": [5, 6], "random_sampl": [5, 6], "sampl": [5, 6, 7, 8, 9, 18, 21], "sample_for_all_one_sid": [5, 6], "subsumptionmappinggener": [5, 6], "online_subs_construct": [5, 6], "preserved_tgt_iri": [5, 6], "renew_sub": [5, 6], "static_subs_construct": [5, 6], "subs_from_an_equiv": [5, 6], "subs_pairs_to_tsv": [5, 6], "validate_sub": [5, 6], "textsemanticscorpora": [5, 6], "add_samples_from_sub_corpu": [5, 6], "feed_auxiliary_onto": [5, 6], "remove_invalid_neg": [5, 6], "report_sub_corpora_info": [5, 6], "textsemanticscorpusformap": [5, 6], "textsemanticscorpusforonto": [5, 6], "atomic_sub": [5, 7], "complex_sub": [5, 7], "subs_bas": [5, 7], "inferenceprocessor": [5, 7], "get_exampl": [5, 7], "load_inference_dataset": [5, 7], "load_prompt_data_from_huggingfac": [5, 7], "load_prompt_data_from_t": [5, 7], "provid": [6, 20, 22], "function": [6, 7, 17, 22], "candid": [6, 11, 16], "ref_mappings_path": 6, "null_ref_mappings_path": 6, "rel": [6, 11, 16, 22], "max_hop": [6, 17], "5": [6, 16, 17, 21, 22], "avoid_ancestor": 6, "avoid_descend": 6, "ent": [6, 16, 17, 21], "thingclass": [6, 16, 17, 18, 20, 21], "comput": [6, 11, 16, 17, 21], "famili": 6, "member": 6, "an": [6, 7, 8, 10, 11, 16, 17, 18, 19, 20, 21], "which": [6, 11, 17, 18, 19], "should": [6, 9, 17, 21], "avoid": [6, 11], "subsumpt": [6, 8, 16, 19], "match": [6, 9, 11, 17, 19], "ref_tgt_ent_iri": 6, "n_cand": 6, "us": [6, 7, 15, 16, 21, 22], "invert": [6, 16, 21], "index": [6, 16, 21, 23], "idf": [6, 16, 21], "score": [6, 9, 11, 16, 21], "all": [6, 8, 11, 16, 17, 18, 21], "refer": [6, 22], "anchor": [6, 16, 17], "first": [6, 16, 17, 18, 21], "excluded_ref_tgt": 6, "strategy2num": 6, "randomli": [6, 8, 21, 22], "select": [6, 8, 11, 16, 17, 21], "amend": 6, "random": [6, 21, 22], "meet": 6, "nearest": 6, "hop": [6, 16, 17], "n": 6, "target": [6, 11, 21, 22], "both": [6, 11, 22], "side": [6, 19], "per": 6, "equival": [6, 8, 18, 19, 21], "equiv_mappings_path": 6, "max_subs_ratio": 6, "is_delete_equiv_tgt": 6, "onlin": 6, "algorithm": [6, 11, 17, 19], "equiv": 6, "skip": 6, "mark": 6, "2": [6, 9, 21, 22], "delet": [6, 20], "becaus": [6, 17, 21], "perform": [6, 9], "instantli": 6, "return": [6, 7, 8, 16, 17, 18, 19, 21, 22], "ar": [6, 8, 9, 11, 16, 17, 18, 19, 20, 21, 22], "A": [6, 7, 8, 16, 17, 19, 22], "befor": [6, 11, 16], "src_ent_iri": [6, 11, 16, 17], "tgt_ent_iri": [6, 11, 16, 17], "thu": 6, "adopt": [6, 21], "bf": 6, "search": [6, 16, 17, 19, 23], "valid": [6, 7, 11, 21, 22], "ancestor": [6, 17], "descend": [6, 17], "The": [6, 7, 16, 19, 20, 21], "updat": [6, 16], "outsid": 6, "subs_pair": 6, "tsv": [6, 16, 22], "script": [6, 9, 14], "semant": [6, 9], "corpora": [6, 11], "import": [6, 9, 11], "notic": [6, 11], "auxiliari": [6, 8, 11], "might": [6, 11], "same": [6, 11, 16, 21, 22], "src": [6, 11, 21], "tgt": [6, 11, 21], "so": [6, 11, 16], "owlready2": [6, 11, 16, 18], "cannot": [6, 11, 22], "distinguish": [6, 11], "aux": [6, 11], "onli": [6, 11, 17], "after": [6, 11], "built": [6, 11], "intra": [6, 8, 11], "cross": [6, 11, 21], "known_map": [6, 21], "aux_onto": [6, 11], "apply_transit": [6, 11, 21], "neg_ratio": [6, 8, 11], "4": [6, 11, 22], "sub_corpu": 6, "posit": [6, 21, 22], "final": 6, "collect": [6, 21], "new_aux_onto": 6, "feed": 6, "augment": 6, "pos_sampl": 6, "neg_sampl": 6, "remov": [6, 21], "element": [6, 9, 22], "been": 6, "occur": 6, "print": [6, 22], "individu": 6, "inform": [6, 16], "txtsem": 6, "correspond": [6, 17], "statist": [6, 21], "onto_map": [6, 11, 17], "contruct": 6, "atomicsubsumptionsampl": [7, 8], "contradiction_pair": [7, 8], "entailment_pair": [7, 8], "init_sub": [7, 8], "random_select_lab_pair": [7, 8], "complexsubsumptionsampl": [7, 8], "contradiction_pairs_from_equiv_axiom": [7, 8], "entailment_pairs_from_equiv_axiom": [7, 8], "random_corrupt": [7, 8], "subsumptionsamplerbas": [7, 8], "random_atomic_class": [7, 8], "random_atomic_class_pair": [7, 8], "random_object_properti": [7, 8], "random_sibling_atomic_class_for": [7, 8], "random_sibling_atomic_class_pair": [7, 8], "apply_binari": 7, "dataprocessor": 7, "data_dir": 7, "split": [7, 11, 14, 22], "get": [7, 11, 15, 17, 21, 22], "under": 7, "path": [7, 11, 16, 17, 18, 22], "exampl": [7, 15], "file": [7, 16, 22], "could": 7, "locat": 7, "txt": 7, "paramet": [7, 16, 19, 21, 22], "dev": 7, "unlabel": 7, "inputexampl": 7, "type": [7, 16, 19, 21], "cfgnode": [7, 14], "return_class": 7, "plm": 7, "loader": 7, "global": 7, "It": 7, "simulaten": 7, "whether": 7, "processor": [7, 14], "futur": [7, 21], "usag": 7, "dataset_path": [7, 22], "multi_nli": [7, 22], "datast": [7, 22], "openprompt": [7, 14, 15, 22], "tabular_data_path": 7, "label2idx": 7, "premise_pattern": 7, "callabl": [7, 8, 17], "lambda": 7, "hypothesis_pattern": 7, "contain": 7, "premis": 7, "hypothesi": 7, "json": [7, 8, 22], "atom": [8, 19, 21], "hard_neg_ratio": 8, "sample_a_pair": 8, "max_neg_num": 8, "indic": 8, "contradict": 8, "left": [8, 19], "right": [8, 19], "Such": 8, "pass": 8, "check": [8, 9, 16, 17, 18, 21, 22], "entail": 8, "left_class_iri": 8, "right_class_iri": 8, "label": [8, 11, 15, 16, 19, 21], "obj_prop_path": [8, 19], "equiv_axiom": [8, 16, 18], "owlobject": [8, 18], "involv": 8, "complex": [8, 19], "axiom": [8, 17, 18, 19, 21], "c": [8, 16], "complexc": 8, "corrupt": 8, "one": [8, 11, 16, 19], "subclassof": 8, "superclassof": 8, "chang": [8, 22], "max_num_per_equiv": 8, "is_test": 8, "to_str": 8, "draw": 8, "name": [8, 10, 11, 16, 17, 20, 21, 22], "concept": [8, 9], "properti": [8, 16, 17, 18, 21], "class_iri": 8, "sibl": [8, 16, 21], "given": [8, 11, 16, 17, 18, 21], "format": [8, 11, 22], "similar": [8, 11, 19], "manner": 8, "implement": [9, 10, 11, 17, 22], "pred_path": 9, "ref_path": 9, "null_ref_path": [9, 11], "threshold": [9, 16, 17], "processed_pr": 9, "show_more_f_scor": 9, "f": 9, "most": 9, "om": [9, 11], "global_match_dir": 9, "train_ref_path": [9, 11], "val_ref_path": [9, 11], "test_ref_path": [9, 11], "num_proc": [9, 11], "ref_anchored_maps_path": 9, "k": [9, 11, 16, 22], "hit": [9, 11], "mrr": [9, 11], "estim": 9, "pred_map": 9, "defin": [9, 18, 21], "differ": [9, 11, 16, 21, 22], "task": [9, 15], "iter": [9, 11, 16, 21], "ref": 9, "null_ref": 9, "awar": 9, "p": 9, "r": [9, 21], "beta": 9, "factor": 9, "\u03b2": 9, "where": [9, 19, 21], "null_set": 9, "ignor": 9, "neither": 9, "ve": 9, "nor": 9, "lawhi": 9, "github": 9, "io": 9, "pythagorean": 9, "ref_tupl": 9, "top": [9, 16, 22], "sum_i": 9, "rank_i": 9, "predict": [9, 11, 17], "correct": 9, "tp": 9, "fp": 9, "retriev": [9, 21], "fn": 9, "logmap_java": [10, 11], "ontoalignbas": [10, 11], "batched_lab_products_for_": [10, 11], "current_global_map": [10, 11], "ent_pair_scor": [10, 11], "fixed_src_ent_pair_scor": [10, 11], "global_mappings_for_": [10, 11], "global_mappings_for_ent_chunk": [10, 11], "global_mappings_for_onto": [10, 11], "global_mappings_for_onto_multi_proc": [10, 11], "global_match": [10, 11], "hyperparams_select": [10, 11], "idf_select_for_": [10, 11], "lab_products_for_": [10, 11], "load_map": [10, 11], "pair_scor": [10, 11], "ontoalignpipelin": [10, 11], "batch_pool": [10, 11], "construct_corpora": [10, 11], "load_fine_tune_data": [10, 11], "mapping_extens": [10, 11], "mapping_repair": [10, 11], "refin": [10, 11], "repair_format": [10, 11], "editsimilar": [10, 11], "stringmatch": [10, 11], "max_norm_edit_sim": [10, 11], "overlap": [10, 11, 22], "deprec": [10, 14, 21], "inference_pipelin": [10, 14], "manual": [10, 14], "build_dataload": [10, 14], "run_infer": [10, 14], "model_nam": [10, 11, 15, 22], "config_path": [10, 11], "relative_path": 10, "saved_obj_path": [10, 22], "is_onto": 10, "accord": [10, 11, 18, 21, 22], "whole": [10, 11, 19], "pipelin": [10, 11], "java": [11, 12, 22], "depend": [11, 12], "requir": [11, 16], "full": [11, 21], "w": [11, 21], "o": 11, "heurist": 11, "cand_pool_s": 11, "200": [11, 16, 21], "n_best": [11, 16], "is_train": 11, "is_val_model_select": 11, "default_hyperparam": 11, "tgt_cand": 11, "catesian": 11, "product": [11, 21], "between": [11, 18, 20, 22], "distribut": 11, "block": 11, "length": [11, 16, 21], "tgt_cand_iri": 11, "src_ent_iri_chunk": 11, "save_step": 11, "100": 11, "intermediate_sav": 11, "chunk": 11, "note": [11, 16, 18], "time": 11, "especi": 11, "etc": 11, "multipl": 11, "match_src2tgt": 11, "match_tgt2src": 11, "do": [11, 21], "hyperparam": 11, "choos": 11, "combin": 11, "tbc_map": 11, "intput": 11, "src_onto_path": 11, "tgt_onto_path": 11, "new_onto_path": 11, "tbc_flag": 11, "anoth": [11, 18], "interest": 11, "fact": 11, "sinc": [11, 21], "owl": [11, 16, 19], "pars": [11, 18, 19, 22], "our": 11, "even": 11, "destroi": [11, 16], "make": 11, "train_map": 11, "validation_map": 11, "test_map": 11, "apply_string_match": 11, "batch_scor": 11, "tensor": 11, "batch_len": 11, "directori": 11, "split_ratio": 11, "0": [11, 15, 16, 17, 19, 22], "selected_map": 11, "map_type_to_extend": 11, "extension_threshold": 11, "appli": 11, "extens": [11, 17], "formatted_file_path": 11, "map_type_to_repair": 11, "logmap": 11, "debugg": 11, "post": 11, "best_val_threshold": 11, "src_ent_lab": [11, 21], "tgt_ent_lab": [11, 21], "easi": 11, "string": [11, 19, 21, 22], "synonym": [11, 21], "classifi": 11, "system": 11, "use_edit_dist": 11, "inferencepipelin": [14, 15], "inference_label_word": [14, 15], "inference_templ": [14, 15], "ontolama": [14, 19], "pretrainedtoken": 14, "tokenizer_wrapper_class": 14, "tokenizerwrapp": 14, "exp_path": 14, "train_dataset": [14, 15], "valid_dataset": 14, "test_dataset": 14, "resum": 14, "zero": 14, "reproduc": [15, 22], "pet": 15, "roberta": 15, "model_path": 15, "larg": 15, "label_word": 15, "inference_dataset": 15, "over": 15, "val_dataset": 15, "few": 15, "show": 15, "prompt": [15, 21], "include_neutr": 15, "verbal": 15, "branch_head_of": [16, 17], "depth_max": [16, 17], "depth_min": [16, 17], "neighbours_of": [16, 17], "sub_thing_classes_of": [16, 17], "super_thing_classes_of": [16, 17], "thing_class_ancestors_of": [16, 17], "thing_class_descendants_of": [16, 17], "iterativemappingextens": [16, 17], "check_ent_pair": [16, 17], "one_hob_extend": [16, 17], "renew_fronti": [16, 17], "run_extens": [16, 17], "parser": [16, 18], "axiom_parser_bas": [16, 18], "equiv_pars": [16, 18], "check_disjoint": [16, 18], "disjoints_from_iri": [16, 18], "owlreason": [16, 18], "owlnoth": [16, 18], "owlth": [16, 18], "check_assumed_disjoint": [16, 18], "check_common_descend": [16, 18], "check_negative_subsumpt": [16, 18], "check_subsumpt": [16, 18], "determin": [16, 17, 18], "getowlobjectfromiri": [16, 18], "getowlobject": [16, 18], "hasiri": [16, 18], "replace_ent": [16, 18], "save_onto": [16, 18], "sibling_dict": [16, 18], "sibling_pair": [16, 18], "sub_entities_of": [16, 18], "super_entities_of": [16, 18], "ontoprun": [16, 20], "isolate_class": [16, 20], "jar_preserv": [16, 20], "overlap_count": [16, 20], "simple_prun": [16, 20], "abbr_iri": [16, 21], "child_lab": [16, 21], "is_valid_iri": [16, 21], "lab_product": [16, 21], "labs_from_prop": [16, 21], "prep_lab": [16, 21], "unfold_iri": [16, 21], "add_matched_synonyms_from_map": [16, 21], "add_synonyms_from_onto": [16, 21], "connected_label": [16, 21], "create_merged_sect": [16, 21], "disjointness_negative_sampl": [16, 21], "merge_synonyms_by_transit": [16, 21], "positive_sampl": [16, 21], "positive_sampling_from_paired_group": [16, 21], "random_negative_sampl": [16, 21], "random_negative_sampling_from_paired_group": [16, 21], "from_pretrain": [16, 21], "from_rule_bas": [16, 21], "tokenize_al": [16, 21], "serv": 16, "whose": 16, "relat": 16, "head": 16, "dup_strategi": 16, "averag": 16, "anchor_map": 16, "allow_exist": 16, "while": 16, "rank": 16, "cand": 16, "alreadi": [16, 18], "scored_onto_map": 16, "fill": 16, "covert": 16, "table_mappings_path": 16, "is_rank": 16, "read": [16, 22], "csv": 16, "preserv": [16, 20], "with_scor": 16, "unravel": 16, "datafram": [16, 22], "duplic": [16, 21], "merg": [16, 21], "am": 16, "em": 16, "end": [16, 22], "ent_map": 16, "include_scor": 16, "as_tupl": [16, 19], "output": [16, 17], "particular": [16, 21], "entri": [16, 21], "extend": [16, 17], "conveni": 16, "access": 16, "textual": 16, "structur": [16, 19], "owlapi": [16, 18, 19], "librari": 16, "see": [16, 19], "known": 16, "issu": 16, "No": [16, 21], "solut": 16, "second": [16, 18], "cach": 16, "owl_path": [16, 19], "cut": 16, "onto_path": [16, 18, 20], "lab_prop": [16, 21], "www": 16, "w3": 16, "org": [16, 19], "2000": 16, "01": 16, "rdf": [16, 22], "schema": 16, "uncased_label": 16, "initialis": 16, "coduct": 16, "annot": [16, 21], "consid": [16, 21], "lowercas": 16, "rais": [16, 19], "filenotfounderror": 16, "miss": 16, "ent_tok": [16, 21], "pool_siz": [16, 21], "calcul": 16, "ha": [16, 19, 21], "consist": [16, 18], "pkl": 16, "class2idx": 16, "idx2lab": 16, "inv_idx": [16, 21], "valueerror": 16, "found": 16, "3": [16, 21, 22], "d": [16, 21], "1st": [16, 21], "2nd": [16, 21], "3rd": [16, 21], "copi": 16, "bert_subsumpt": 16, "experi": 16, "repositori": 16, "origin": [16, 17, 21], "py": 16, "onto_fil": 16, "label_properti": 16, "prefix": 16, "subclass_str": 16, "subsumption_typ": 16, "subclass": 16, "restrict": [16, 17], "subsumptions_to_mask": 16, "subcl": 16, "subsum": [16, 18], "sample_label": 16, "supcl": 16, "max_subsumpt": 16, "explor": 17, "branch": [17, 22], "exactli": 17, "below": 17, "thing": 17, "depth": 17, "includ": [17, 20, 21], "root": [17, 19], "te": 17, "minimum": 17, "ignore_root": 17, "neighbour": 17, "breadth": 17, "style": [17, 22], "ensur": [17, 21], "exclud": [17, 22], "non": [17, 20, 21, 22], "existenti": 17, "include_self": 17, "entityclass": 17, "except": 17, "principl": 17, "state": 17, "pr": 17, "b": 17, "high": 17, "semanticallyrel": 17, "compar": 17, "version": [17, 21], "like": 17, "modif": 17, "sens": 17, "prediciton": 17, "modifi": [17, 19], "old": 17, "replac": [17, 18], "top1": 17, "also": 17, "preservs": 17, "scoring_method": 17, "9": [17, 22], "logger": [17, 22], "ad": 17, "discard": 17, "undervalu": 17, "maximum_pair": 17, "500": 17, "assumpt": 17, "highli": 17, "confid": 17, "parent": [17, 20, 22], "children": [17, 19, 20], "given_map": 17, "frontier": 17, "newli": 17, "expand": 17, "max_it": [17, 21], "owlaxiomparserbas": [18, 19], "abbr_axiom_text": [18, 19], "owlequivaxiompars": [18, 19], "fit": [18, 19], "parse_and_atom": [18, 19], "parse_and_mix": [18, 19], "parse_atom_class": [18, 19], "parse_equiv": [18, 19], "parse_ext_and_atom": [18, 19], "parse_ext_atom": [18, 19], "parse_obj_prop": [18, 19], "parse_sub": [18, 19], "print_pattern": [18, 19], "ent1": 18, "ent2": 18, "disjoint": [18, 21], "assert": 18, "assumed_disjoint_pair": 18, "still": 18, "express": [18, 19], "owlobject1": 18, "owlobject2": 18, "common": 18, "decend": 18, "saniti": 18, "subowlobject": 18, "superowlobject": 18, "is_singular": 18, "proteg": 18, "entity_iri": 18, "replacement_iri": 18, "objec": 18, "either": 18, "parenthes": 19, "tenari": 19, "equivalentclass": 19, "purl": 19, "obolibrari": 19, "obo": 19, "foodon_00001083": 19, "objectintersectionof": 19, "foodon_00001133": 19, "objectsomevaluesfrom": 19, "ro_0001000": 19, "foodon_03411012": 19, "6": [19, 22], "54": 19, "55": 19, "61": 19, "109": 19, "110": 19, "116": 19, "159": 19, "160": 19, "208": 19, "209": 19, "210": 19, "212": 19, "213": 19, "axiom_text": 19, "abbrevi": [19, 21, 22], "operand": 19, "represent": 19, "stuctur": 19, "deriv": 19, "certain": 19, "pattern": 19, "node": [19, 22], "keep_atom_iri": 19, "To": 19, "wai": [19, 21], "follow": 19, "child": [19, 20, 21, 22], "cover": [19, 22], "subsequ": 19, "hand": 19, "therefor": 19, "lead": 19, "directli": 19, "render": 19, "runtimeerror": 19, "support": 19, "yet": 19, "is_plur": 19, "preserved_iris_path": 20, "preserve_strategi": 20, "simplest": 20, "keep_hierarchi": 20, "isol": 20, "chilren": 20, "reconstruct": 20, "hierarchi": 20, "onto_nam": 20, "launch": 20, "jar": [20, 22], "program": 20, "preserved_iri": 20, "count": 20, "how": 20, "mani": 20, "link": [20, 21, 22], "recurs": [20, 22], "ent_iri": 21, "onto_iri": 21, "fragment": 21, "onto_prefix": 21, "instead": 21, "associ": 21, "valu": [21, 22], "t": 21, "lower": 21, "share": 21, "tf": 21, "fair": 21, "measur": 21, "catersian": 21, "form": 21, "uncas": 21, "uniqu": [21, 22], "clean": 21, "preprocess": 21, "underscor": 21, "case": 21, "size": 21, "ent_abbr_iri": 21, "unfold": 21, "thesaru": 21, "guarante": 21, "reflex": 21, "ident": 21, "label1": 21, "symmetr": 21, "label2": 21, "transit": 21, "label3": 21, "huge": 21, "space": 21, "care": 21, "about": 21, "abov": 21, "soft": 21, "hard": 21, "small": 21, "mismatch": 21, "thought": 21, "appl": 21, "fruit": 21, "redcolor": 21, "Or": 21, "leav": 21, "section": 21, "src_synonym": 21, "tgt_synonym": 21, "result": [21, 22], "label_pair": 21, "build": 21, "adjac": 21, "among": 21, "list_of_disjoint_synonym_group": 21, "neg_num": 21, "often": 21, "limit": 21, "possibl": 21, "synonym_group_seq": 21, "With": 21, "synonym_group": 21, "pos_num": 21, "repo": 21, "matched_synonym_group": 21, "oposit": 21, "pretrained_path": 21, "spacy_lib_path": 21, "en_core_web_sm": 21, "spaci": 21, "rule": 21, "analysi": 21, "texts_list": 21, "tsv_mapping_path": 22, "out_dir": 22, "unsupervis": 22, "semi": 22, "supervis": 22, "7": 22, "num_split": 22, "gpu": 22, "cpu": 22, "torch": 22, "tuple_str": 22, "choic": 22, "avail": 22, "excl": 22, "file_path": 22, "jsonl": 22, "introduc": 22, "blink": 22, "project": 22, "panda": 22, "treat": 22, "null": 22, "empti": 22, "subprocess": 22, "seed_val": 22, "888": 22, "seed": 22, "dic": 22, "desc": 22, "top_k": 22, "reserv": 22, "java_style_identifi": 22, "identifi": 22, "natur": 22, "languag": 22, "phrase": 22, "supernaturalpow": 22, "power": 22, "apirefer": 22, "api": 22, "var_nam": 22, "variabl": 22, "l": 22, "mess": 22, "around": 22, "order": 22, "formatt": 22, "datefmt": 22, "runtim": 22, "hr": 22, "min": 22, "sec": 22, "messag": 22, "banner_len": 22, "70": 22, "sym": 22, "banner": 22, "consol": 22, "info": 22, "tagger": 22, "extern": 22, "oaei": 22, "rdf_file": 22, "fma": 22, "nci": 22, "rang": 22, "partial": 22, "fulli": 22, "isparentof": 22, "allow": 22, "appear": 22, "rangenodetre": 22, "nodemixin": 22, "smaller": 22, "inclus": 22, "packag": [23, 24], "subpackag": [23, 24], "flagged_obj": [23, 24], "modul": [23, 24], "saved_obj": [23, 24], "page": 23, "content": 24}, "objects": {"": [[0, 0, 0, "-", "deeponto"]], "deeponto": [[1, 0, 0, "-", "bert"], [4, 0, 0, "-", "config"], [5, 0, 0, "-", "data"], [9, 0, 0, "-", "evaluation"], [0, 0, 0, "-", "flagged_obj"], [0, 3, 1, "", "init_jvm"], [10, 0, 0, "-", "models"], [16, 0, 0, "-", "onto"], [0, 0, 0, "-", "saved_obj"], [22, 0, 0, "-", "utils"]], "deeponto.bert": [[1, 0, 0, "-", "bert_args"], [2, 0, 0, "-", "static"], [3, 0, 0, "-", "train"]], "deeponto.bert.bert_args": [[1, 1, 1, "", "BertArguments"]], "deeponto.bert.bert_args.BertArguments": [[1, 2, 1, "", "generate_training_args"]], "deeponto.bert.static": [[2, 0, 0, "-", "bert_static_base"], [2, 0, 0, "-", "bert_static_embeds"], [2, 0, 0, "-", "bert_static_seq_classifier"], [2, 0, 0, "-", "bert_static_subs"]], "deeponto.bert.static.bert_static_base": [[2, 1, 1, "", "BertStaticBase"]], "deeponto.bert.static.bert_static_base.BertStaticBase": [[2, 2, 1, "", "load_model"], [2, 2, 1, "", "proc_input"]], "deeponto.bert.static.bert_static_embeds": [[2, 1, 1, "", "BertStaticForEmbeddings"]], "deeponto.bert.static.bert_static_embeds.BertStaticForEmbeddings": [[2, 2, 1, "", "load_model"], [2, 2, 1, "", "ontotext_embeds"], [2, 2, 1, "", "sent_embeds_cls"], [2, 2, 1, "", "sent_embeds_mean"], [2, 2, 1, "", "word_embeds"]], "deeponto.bert.static.bert_static_seq_classifier": [[2, 1, 1, "", "BertStaticForSequenceClassification"]], "deeponto.bert.static.bert_static_seq_classifier.BertStaticForSequenceClassification": [[2, 2, 1, "", "load_model"]], "deeponto.bert.static.bert_static_subs": [[2, 1, 1, "", "BERTStaticSubs"]], "deeponto.bert.static.bert_static_subs.BERTStaticSubs": [[2, 2, 1, "", "ontotext_embeds"], [2, 2, 1, "", "sent_embeds_cls"], [2, 2, 1, "", "sent_embeds_mean"], [2, 2, 1, "", "word_embeds"]], "deeponto.bert.train": [[3, 0, 0, "-", "bert_train_base"], [3, 0, 0, "-", "bert_train_seq_classfier"], [3, 0, 0, "-", "bert_train_subs"]], "deeponto.bert.train.bert_train_base": [[3, 1, 1, "", "BertTrainerBase"]], "deeponto.bert.train.bert_train_base.BertTrainerBase": [[3, 2, 1, "", "compute_metrics"], [3, 2, 1, "", "load_dataset"], [3, 2, 1, "", "load_model"], [3, 2, 1, "", "train"]], "deeponto.bert.train.bert_train_seq_classfier": [[3, 1, 1, "", "BertTrainerForSequenceClassification"]], "deeponto.bert.train.bert_train_seq_classfier.BertTrainerForSequenceClassification": [[3, 2, 1, "", "load_dataset"], [3, 2, 1, "", "load_model"]], "deeponto.bert.train.bert_train_subs": [[3, 1, 1, "", "BERTTrainerSubs"]], "deeponto.bert.train.bert_train_subs.BERTTrainerSubs": [[3, 2, 1, "", "add_special_tokens"], [3, 2, 1, "", "compute_metrics"], [3, 2, 1, "", "load_dataset"], [3, 2, 1, "", "train"]], "deeponto.config": [[4, 0, 0, "-", "input_config"]], "deeponto.config.input_config": [[4, 1, 1, "", "InputConfig"]], "deeponto.config.input_config.InputConfig": [[4, 2, 1, "", "add_param_group"], [4, 2, 1, "", "edit_config"], [4, 2, 1, "", "load_config"], [4, 2, 1, "", "new_config"], [4, 2, 1, "", "preview_and_save"]], "deeponto.data": [[6, 0, 0, "-", "align"], [7, 0, 0, "-", "infer"]], "deeponto.data.align": [[6, 0, 0, "-", "cand_maps"], [6, 0, 0, "-", "subs_maps"], [6, 0, 0, "-", "text_semantics_corpora"]], "deeponto.data.align.cand_maps": [[6, 1, 1, "", "MappingCandidateGenerator"]], "deeponto.data.align.cand_maps.MappingCandidateGenerator": [[6, 2, 1, "", "avoided_family_of"], [6, 2, 1, "", "current_anchor_mappings"], [6, 2, 1, "", "current_ref_dict"], [6, 2, 1, "", "idf_sample"], [6, 2, 1, "", "init_anchors"], [6, 2, 1, "", "mixed_sample"], [6, 2, 1, "", "neighbour_sample"], [6, 2, 1, "", "random_sample"], [6, 2, 1, "", "sample"], [6, 2, 1, "", "sample_for_all_one_side"]], "deeponto.data.align.subs_maps": [[6, 1, 1, "", "SubsumptionMappingGenerator"]], "deeponto.data.align.subs_maps.SubsumptionMappingGenerator": [[6, 2, 1, "", "online_subs_construct"], [6, 2, 1, "", "preserved_tgt_iris"], [6, 2, 1, "", "renew_subs"], [6, 2, 1, "", "static_subs_construct"], [6, 2, 1, "", "subs_from_an_equiv"], [6, 2, 1, "", "subs_pairs_to_tsv"], [6, 2, 1, "", "validate_subs"]], "deeponto.data.align.text_semantics_corpora": [[6, 1, 1, "", "TextSemanticsCorpora"], [6, 1, 1, "", "TextSemanticsCorpusforMappings"], [6, 1, 1, "", "TextSemanticsCorpusforOnto"]], "deeponto.data.align.text_semantics_corpora.TextSemanticsCorpora": [[6, 2, 1, "", "add_samples_from_sub_corpus"], [6, 2, 1, "", "feed_auxiliary_ontos"], [6, 2, 1, "", "remove_invalid_negatives"], [6, 2, 1, "", "report_sub_corpora_info"], [6, 2, 1, "", "save_instance"]], "deeponto.data.align.text_semantics_corpora.TextSemanticsCorpusforMappings": [[6, 2, 1, "", "save_instance"]], "deeponto.data.align.text_semantics_corpora.TextSemanticsCorpusforOnto": [[6, 2, 1, "", "save_instance"]], "deeponto.data.infer": [[7, 0, 0, "-", "infer_utils"], [8, 0, 0, "-", "subs"]], "deeponto.data.infer.infer_utils": [[7, 1, 1, "", "InferenceProcessor"], [7, 3, 1, "", "load_inference_dataset"], [7, 3, 1, "", "load_prompt_data_from_huggingface"], [7, 3, 1, "", "load_prompt_data_from_table"]], "deeponto.data.infer.infer_utils.InferenceProcessor": [[7, 2, 1, "", "get_examples"]], "deeponto.data.infer.subs": [[8, 0, 0, "-", "atomic_subs"], [8, 0, 0, "-", "complex_subs"], [8, 0, 0, "-", "subs_base"]], "deeponto.data.infer.subs.atomic_subs": [[8, 1, 1, "", "AtomicSubsumptionSampler"]], "deeponto.data.infer.subs.atomic_subs.AtomicSubsumptionSampler": [[8, 2, 1, "", "contradiction_pairs"], [8, 2, 1, "", "entailment_pairs"], [8, 2, 1, "", "init_subs"], [8, 2, 1, "", "random_select_lab_pair"], [8, 2, 1, "", "sample"]], "deeponto.data.infer.subs.complex_subs": [[8, 1, 1, "", "ComplexSubsumptionSampler"]], "deeponto.data.infer.subs.complex_subs.ComplexSubsumptionSampler": [[8, 2, 1, "", "contradiction_pairs_from_equiv_axiom"], [8, 2, 1, "", "entailment_pairs_from_equiv_axiom"], [8, 2, 1, "", "init_subs"], [8, 2, 1, "", "random_corrupt"], [8, 2, 1, "", "sample"]], "deeponto.data.infer.subs.subs_base": [[8, 1, 1, "", "SubsumptionSamplerBase"]], "deeponto.data.infer.subs.subs_base.SubsumptionSamplerBase": [[8, 2, 1, "", "init_subs"], [8, 2, 1, "", "random_atomic_class"], [8, 2, 1, "", "random_atomic_class_pair"], [8, 2, 1, "", "random_object_property"], [8, 2, 1, "", "random_sibling_atomic_class_for"], [8, 2, 1, "", "random_sibling_atomic_class_pair"], [8, 2, 1, "", "save"]], "deeponto.evaluation": [[9, 0, 0, "-", "align_eval"], [9, 0, 0, "-", "eval_metrics"]], "deeponto.evaluation.align_eval": [[9, 3, 1, "", "global_match_eval"], [9, 3, 1, "", "global_match_select"], [9, 3, 1, "", "local_rank_eval"], [9, 3, 1, "", "pred_thresholding"]], "deeponto.evaluation.eval_metrics": [[9, 3, 1, "", "f1"], [9, 3, 1, "", "f_score"], [9, 3, 1, "", "hits_at_k"], [9, 3, 1, "", "mean_reciprocal_rank"], [9, 3, 1, "", "precision"], [9, 3, 1, "", "recall"]], "deeponto.flagged_obj": [[0, 1, 1, "", "FlaggedObj"]], "deeponto.flagged_obj.FlaggedObj": [[0, 2, 1, "", "renew"], [0, 2, 1, "", "switch"]], "deeponto.models": [[11, 0, 0, "-", "align"], [14, 0, 0, "-", "infer"], [10, 0, 0, "-", "pipeline_base"]], "deeponto.models.align": [[11, 0, 0, "-", "align_base"], [11, 0, 0, "-", "align_pipeline"], [11, 0, 0, "-", "bertmap"], [11, 0, 0, "-", "edit_sim"], [12, 0, 0, "-", "logmap_java"], [11, 0, 0, "-", "string_match"]], "deeponto.models.align.align_base": [[11, 1, 1, "", "OntoAlignBase"]], "deeponto.models.align.align_base.OntoAlignBase": [[11, 2, 1, "", "batched_lab_products_for_ent"], [11, 2, 1, "", "current_global_mappings"], [11, 2, 1, "", "ent_pair_score"], [11, 2, 1, "", "fixed_src_ent_pair_score"], [11, 2, 1, "", "global_mappings_for_ent"], [11, 2, 1, "", "global_mappings_for_ent_chunk"], [11, 2, 1, "", "global_mappings_for_onto"], [11, 2, 1, "", "global_mappings_for_onto_multi_procs"], [11, 2, 1, "", "global_match"], [11, 2, 1, "", "hyperparams_select"], [11, 2, 1, "", "idf_select_for_ent"], [11, 2, 1, "", "lab_products_for_ent"], [11, 2, 1, "", "load_mappings"], [11, 2, 1, "", "pair_score"]], "deeponto.models.align.align_pipeline": [[11, 1, 1, "", "OntoAlignPipeline"]], "deeponto.models.align.align_pipeline.OntoAlignPipeline": [[11, 2, 1, "", "load_model"], [11, 2, 1, "", "load_onto"], [11, 2, 1, "", "run"]], "deeponto.models.align.bertmap": [[11, 1, 1, "", "BERTMap"]], "deeponto.models.align.bertmap.BERTMap": [[11, 2, 1, "", "batch_pooling"], [11, 2, 1, "", "construct_corpora"], [11, 2, 1, "", "ent_pair_score"], [11, 2, 1, "", "fixed_src_ent_pair_score"], [11, 2, 1, "", "global_mappings_for_ent"], [11, 2, 1, "", "load_fine_tune_data"], [11, 2, 1, "", "mapping_extension"], [11, 2, 1, "", "mapping_repair"], [11, 2, 1, "", "refinement"], [11, 2, 1, "", "repair_formatting"], [11, 2, 1, "", "string_match"], [11, 2, 1, "", "train"]], "deeponto.models.align.edit_sim": [[11, 1, 1, "", "EditSimilarity"]], "deeponto.models.align.string_match": [[11, 1, 1, "", "StringMatch"]], "deeponto.models.align.string_match.StringMatch": [[11, 2, 1, "", "ent_pair_score"], [11, 2, 1, "", "fixed_src_ent_pair_score"], [11, 2, 1, "", "global_mappings_for_ent"], [11, 2, 1, "", "max_norm_edit_sim"], [11, 2, 1, "", "overlap"]], "deeponto.models.infer": [[15, 0, 0, "-", "deprecated"], [14, 0, 0, "-", "infer_pipeline"]], "deeponto.models.infer.deprecated": [[15, 0, 0, "-", "inference_pipeline"], [15, 0, 0, "-", "manual"]], "deeponto.models.infer.deprecated.inference_pipeline": [[15, 1, 1, "", "InferencePipeline"]], "deeponto.models.infer.deprecated.inference_pipeline.InferencePipeline": [[15, 2, 1, "", "run"], [15, 2, 1, "", "train"]], "deeponto.models.infer.deprecated.manual": [[15, 3, 1, "", "inference_label_words"], [15, 3, 1, "", "inference_templates"]], "deeponto.models.infer.infer_pipeline": [[14, 3, 1, "", "build_dataloader"], [14, 3, 1, "", "run_inference"], [14, 3, 1, "", "trainer"]], "deeponto.models.pipeline_base": [[10, 1, 1, "", "OntoPipelineBase"]], "deeponto.models.pipeline_base.OntoPipelineBase": [[10, 2, 1, "", "complete_path"], [10, 2, 1, "", "from_saved"], [10, 2, 1, "", "load_model"], [10, 2, 1, "", "load_onto"], [10, 2, 1, "", "run"]], "deeponto.onto": [[17, 0, 0, "-", "graph"], [16, 0, 0, "-", "iris"], [18, 0, 0, "-", "logic"], [16, 0, 0, "-", "mapping"], [16, 0, 0, "-", "ontology"], [16, 0, 0, "-", "ontology_subs"], [20, 0, 0, "-", "prune"], [21, 0, 0, "-", "text"]], "deeponto.onto.graph": [[17, 0, 0, "-", "graph_utils"], [17, 0, 0, "-", "iter_map_extend"]], "deeponto.onto.graph.graph_utils": [[17, 3, 1, "", "branch_head_of"], [17, 3, 1, "", "depth_max"], [17, 3, 1, "", "depth_min"], [17, 3, 1, "", "neighbours_of"], [17, 3, 1, "", "sub_thing_classes_of"], [17, 3, 1, "", "super_thing_classes_of"], [17, 3, 1, "", "thing_class_ancestors_of"], [17, 3, 1, "", "thing_class_descendants_of"]], "deeponto.onto.graph.iter_map_extend": [[17, 1, 1, "", "IterativeMappingExtension"]], "deeponto.onto.graph.iter_map_extend.IterativeMappingExtension": [[17, 2, 1, "", "check_ent_pair"], [17, 2, 1, "", "one_hob_extend"], [17, 2, 1, "", "renew_frontier"], [17, 2, 1, "", "run_extension"]], "deeponto.onto.logic": [[18, 0, 0, "-", "logic_utils"], [19, 0, 0, "-", "parser"], [18, 0, 0, "-", "reasoner"]], "deeponto.onto.logic.logic_utils": [[18, 3, 1, "", "check_disjoint"], [18, 3, 1, "", "disjoints_from_iri"]], "deeponto.onto.logic.parser": [[19, 0, 0, "-", "axiom_parser_base"], [19, 0, 0, "-", "equiv_parser"]], "deeponto.onto.logic.parser.axiom_parser_base": [[19, 1, 1, "", "OWLAxiomParserBase"]], "deeponto.onto.logic.parser.axiom_parser_base.OWLAxiomParserBase": [[19, 2, 1, "", "abbr_axiom_text"], [19, 2, 1, "", "parse"]], "deeponto.onto.logic.parser.equiv_parser": [[19, 1, 1, "", "OWLEquivAxiomParser"]], "deeponto.onto.logic.parser.equiv_parser.OWLEquivAxiomParser": [[19, 2, 1, "", "fit"], [19, 2, 1, "", "parse_and_atoms"], [19, 2, 1, "", "parse_and_mixed"], [19, 2, 1, "", "parse_atom_class"], [19, 2, 1, "", "parse_equiv"], [19, 2, 1, "", "parse_ext_and_atoms"], [19, 2, 1, "", "parse_ext_atom"], [19, 2, 1, "", "parse_obj_prop"], [19, 2, 1, "", "parse_sub"], [19, 2, 1, "", "print_pattern"]], "deeponto.onto.logic.reasoner": [[18, 1, 1, "", "OWLReasoner"]], "deeponto.onto.logic.reasoner.OWLReasoner": [[18, 4, 1, "", "OWLNothing"], [18, 4, 1, "", "OWLThing"], [18, 2, 1, "", "check_assumed_disjoint"], [18, 2, 1, "", "check_common_descendants"], [18, 2, 1, "", "check_disjoint"], [18, 2, 1, "", "check_negative_subsumption"], [18, 2, 1, "", "check_subsumption"], [18, 2, 1, "", "determine"], [18, 4, 1, "", "equiv_axioms"], [18, 2, 1, "", "getOWLObjectFromIRI"], [18, 2, 1, "", "getOWLObjects"], [18, 2, 1, "", "hasIRI"], [18, 2, 1, "", "replace_entity"], [18, 2, 1, "", "save_onto"], [18, 4, 1, "", "sibling_dict"], [18, 4, 1, "", "sibling_pairs"], [18, 2, 1, "", "sub_entities_of"], [18, 2, 1, "", "super_entities_of"]], "deeponto.onto.mapping": [[16, 1, 1, "", "AnchorMapping"], [16, 1, 1, "", "AnchoredOntoMappings"], [16, 1, 1, "", "EntityMapping"], [16, 1, 1, "", "EntityMappingList"], [16, 1, 1, "", "OntoMappings"]], "deeponto.onto.mapping.AnchorMapping": [[16, 2, 1, "", "add_candidate"]], "deeponto.onto.mapping.AnchoredOntoMappings": [[16, 2, 1, "", "add"], [16, 2, 1, "", "add_many"], [16, 2, 1, "", "existed_cands_for_anchor"], [16, 2, 1, "", "fill_scored_maps"], [16, 2, 1, "", "flattened"], [16, 2, 1, "", "read_table_mappings"], [16, 2, 1, "", "save_instance"], [16, 2, 1, "", "to_df"], [16, 2, 1, "", "unscored_cand_maps"], [16, 2, 1, "", "validate_anchor_mapping"]], "deeponto.onto.mapping.EntityMapping": [[16, 2, 1, "", "to_tuple"]], "deeponto.onto.mapping.EntityMappingList": [[16, 2, 1, "", "append"], [16, 2, 1, "", "read_table_mappings"], [16, 2, 1, "", "sorted"], [16, 2, 1, "", "to_tuples"], [16, 2, 1, "", "topk"]], "deeponto.onto.mapping.OntoMappings": [[16, 2, 1, "", "add"], [16, 2, 1, "", "add_many"], [16, 2, 1, "", "is_existed_mapping"], [16, 2, 1, "", "read_table_mappings"], [16, 2, 1, "", "save_instance"], [16, 2, 1, "", "to_df"], [16, 2, 1, "", "to_tuples"], [16, 2, 1, "", "topks"], [16, 2, 1, "", "topks_for_ent"], [16, 2, 1, "", "validate_mapping"]], "deeponto.onto.ontology": [[16, 1, 1, "", "Ontology"]], "deeponto.onto.ontology.Ontology": [[16, 2, 1, "", "build_inv_idx"], [16, 4, 1, "", "classes"], [16, 2, 1, "", "from_new"], [16, 2, 1, "", "from_saved"], [16, 2, 1, "", "idf_select"], [16, 4, 1, "", "iri"], [16, 2, 1, "", "name_from_iri"], [16, 2, 1, "", "obj_from_iri"], [16, 2, 1, "", "path_select"], [16, 2, 1, "", "save_instance"], [16, 2, 1, "", "search_ent_labs"], [16, 2, 1, "", "sib_labs"]], "deeponto.onto.ontology_subs": [[16, 1, 1, "", "OntologySubs"]], "deeponto.onto.ontology_subs.OntologySubs": [[16, 2, 1, "", "complement_iri_name_to_label"], [16, 2, 1, "", "get_all_restriction_ancestors"], [16, 2, 1, "", "get_declared_named_class_subsumption"], [16, 2, 1, "", "get_declared_restriction_subsumption"], [16, 2, 1, "", "get_named_classes"], [16, 2, 1, "", "get_negative_sample"], [16, 2, 1, "", "get_one_hop_neighbours"], [16, 2, 1, "", "is_normal_named_class"], [16, 2, 1, "", "is_target_some_restriction"], [16, 2, 1, "", "path_subsumptions"], [16, 2, 1, "", "restriction_to_label"], [16, 2, 1, "", "set_masked_subsumptions"], [16, 2, 1, "", "subclass_to_string"], [16, 2, 1, "", "subsumption_to_str"], [16, 2, 1, "", "subsumptions_to_samples"], [16, 2, 1, "", "supclass_to_samples"], [16, 2, 1, "", "traversal_subsumptions"]], "deeponto.onto.prune": [[20, 0, 0, "-", "pruning"]], "deeponto.onto.prune.pruning": [[20, 1, 1, "", "OntoPruner"]], "deeponto.onto.prune.pruning.OntoPruner": [[20, 2, 1, "", "isolate_class"], [20, 2, 1, "", "jar_preserve"], [20, 2, 1, "", "overlap_count"], [20, 2, 1, "", "run"], [20, 2, 1, "", "simple_prune"]], "deeponto.onto.text": [[21, 0, 0, "-", "text_utils"], [21, 0, 0, "-", "thesaurus"], [21, 0, 0, "-", "tokenizer"]], "deeponto.onto.text.text_utils": [[21, 3, 1, "", "abbr_iri"], [21, 3, 1, "", "child_labs"], [21, 3, 1, "", "idf_select"], [21, 3, 1, "", "is_valid_iri"], [21, 3, 1, "", "lab_product"], [21, 3, 1, "", "labs_from_props"], [21, 3, 1, "", "prep_labs"], [21, 3, 1, "", "sib_labs"], [21, 3, 1, "", "unfold_iri"]], "deeponto.onto.text.thesaurus": [[21, 1, 1, "", "Thesaurus"]], "deeponto.onto.text.thesaurus.Thesaurus": [[21, 2, 1, "", "add_matched_synonyms_from_mappings"], [21, 2, 1, "", "add_synonyms_from_ontos"], [21, 2, 1, "", "connected_labels"], [21, 2, 1, "", "create_merged_section"], [21, 2, 1, "", "disjointness_negative_sampling"], [21, 2, 1, "", "merge_synonyms_by_transitivity"], [21, 2, 1, "", "positive_sampling"], [21, 2, 1, "", "positive_sampling_from_paired_groups"], [21, 2, 1, "", "random_negative_sampling"], [21, 2, 1, "", "random_negative_sampling_from_paired_groups"]], "deeponto.onto.text.tokenizer": [[21, 1, 1, "", "Tokenizer"]], "deeponto.onto.text.tokenizer.Tokenizer": [[21, 2, 1, "", "from_pretrained"], [21, 2, 1, "", "from_rule_based"], [21, 2, 1, "", "tokenize_all"]], "deeponto.saved_obj": [[0, 1, 1, "", "SavedObj"]], "deeponto.saved_obj.SavedObj": [[0, 2, 1, "", "copy2"], [0, 2, 1, "", "from_new"], [0, 2, 1, "", "from_saved"], [0, 2, 1, "", "load_json"], [0, 2, 1, "", "load_pkl"], [0, 2, 1, "", "print_json"], [0, 2, 1, "", "report"], [0, 2, 1, "", "save_instance"], [0, 2, 1, "", "save_json"], [0, 2, 1, "", "save_pkl"]], "deeponto.utils": [[22, 0, 0, "-", "general_utils"], [22, 0, 0, "-", "logging"], [22, 0, 0, "-", "oaei_utils"], [22, 0, 0, "-", "tree"]], "deeponto.utils.general_utils": [[22, 3, 1, "", "create_path"], [22, 3, 1, "", "data_split"], [22, 3, 1, "", "detect_path"], [22, 3, 1, "", "evenly_divide"], [22, 3, 1, "", "get_device"], [22, 3, 1, "", "load_prompt_data"], [22, 3, 1, "", "parse_tuple"], [22, 3, 1, "", "print_choices"], [22, 3, 1, "", "rand_sample_excl"], [22, 3, 1, "", "read_jsonl"], [22, 3, 1, "", "read_table"], [22, 3, 1, "", "run_jar"], [22, 3, 1, "", "set_seed"], [22, 3, 1, "", "sort_dict_by_values"], [22, 3, 1, "", "split_java_identifier"], [22, 3, 1, "", "to_identifier"], [22, 3, 1, "", "uniqify"]], "deeponto.utils.logging": [[22, 1, 1, "", "RuntimeFormatter"], [22, 3, 1, "", "banner_msg"], [22, 3, 1, "", "create_logger"], [22, 3, 1, "", "credit"]], "deeponto.utils.logging.RuntimeFormatter": [[22, 2, 1, "", "formatTime"]], "deeponto.utils.oaei_utils": [[22, 3, 1, "", "read_oaei_mappings"]], "deeponto.utils.tree": [[22, 1, 1, "", "RangeNode"]], "deeponto.utils.tree.RangeNode": [[22, 2, 1, "", "insert_child"], [22, 2, 1, "", "print_tree"], [22, 2, 1, "", "sort_by_start"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:property"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "property", "Python property"]}, "titleterms": {"deeponto": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24], "packag": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22], "subpackag": [0, 1, 5, 7, 10, 11, 12, 14, 16, 18], "submodul": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22], "flagged_obj": 0, "modul": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22], "saved_obj": 0, "content": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23], "bert": [1, 2, 3], "bert_arg": 1, "static": 2, "bert_static_bas": 2, "bert_static_emb": 2, "bert_static_seq_classifi": 2, "bert_static_sub": 2, "train": 3, "bert_train_bas": 3, "bert_train_seq_classfi": 3, "bert_train_sub": 3, "config": 4, "input_config": 4, "data": [5, 6, 7, 8], "align": [6, 11, 12, 13], "cand_map": 6, "subs_map": 6, "text_semantics_corpora": 6, "infer": [7, 8, 14, 15], "infer_util": 7, "sub": 8, "atomic_sub": 8, "complex_sub": 8, "subs_bas": 8, "evalu": 9, "align_ev": 9, "eval_metr": 9, "model": [10, 11, 12, 13, 14, 15], "pipeline_bas": 10, "align_bas": 11, "align_pipelin": 11, "bertmap": 11, "edit_sim": 11, "string_match": 11, "logmap_java": [12, 13], "java": 13, "depend": 13, "infer_pipelin": 14, "deprec": 15, "inference_pipelin": 15, "manual": 15, "onto": [16, 17, 18, 19, 20, 21], "iri": 16, "map": 16, "ontologi": 16, "ontology_sub": 16, "graph": 17, "graph_util": 17, "iter_map_extend": 17, "logic": [18, 19], "logic_util": 18, "reason": 18, "parser": 19, "axiom_parser_bas": 19, "equiv_pars": 19, "prune": 20, "text": 21, "text_util": 21, "thesauru": 21, "token": 21, "util": 22, "general_util": 22, "log": 22, "exampl": 22, "oaei_util": 22, "tree": 22, "welcom": 23, "": 23, "document": 23, "indic": 23, "tabl": 23}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"deeponto package": [[0, "deeponto-package"]], "Subpackages": [[0, "subpackages"], [1, "subpackages"], [5, "subpackages"], [7, "subpackages"], [10, "subpackages"], [11, "subpackages"], [12, "subpackages"], [14, "subpackages"], [16, "subpackages"], [18, "subpackages"]], "Submodules": [[0, "submodules"], [1, "submodules"], [2, "submodules"], [3, "submodules"], [4, "submodules"], [6, "submodules"], [7, "submodules"], [8, "submodules"], [9, "submodules"], [10, "submodules"], [11, "submodules"], [14, "submodules"], [15, "submodules"], [16, "submodules"], [17, "submodules"], [18, "submodules"], [19, "submodules"], [20, "submodules"], [21, "submodules"], [22, "submodules"]], "deeponto.flagged_obj module": [[0, "module-deeponto.flagged_obj"]], "deeponto.saved_obj module": [[0, "module-deeponto.saved_obj"]], "Module contents": [[0, "module-deeponto"], [1, "module-deeponto.bert"], [2, "module-deeponto.bert.static"], [3, "module-deeponto.bert.train"], [4, "module-deeponto.config"], [5, "module-deeponto.data"], [6, "module-deeponto.data.align"], [7, "module-deeponto.data.infer"], [8, "module-deeponto.data.infer.subs"], [9, "module-deeponto.evaluation"], [10, "module-deeponto.models"], [11, "module-deeponto.models.align"], [12, "module-deeponto.models.align.logmap_java"], [13, "module-contents"], [14, "module-deeponto.models.infer"], [15, "module-deeponto.models.infer.deprecated"], [16, "module-deeponto.onto"], [17, "module-deeponto.onto.graph"], [18, "module-deeponto.onto.logic"], [19, "module-deeponto.onto.logic.parser"], [20, "module-deeponto.onto.prune"], [21, "module-deeponto.onto.text"], [22, "module-deeponto.utils"]], "deeponto.bert package": [[1, "deeponto-bert-package"]], "deeponto.bert.bert_args module": [[1, "module-deeponto.bert.bert_args"]], "deeponto.bert.static package": [[2, "deeponto-bert-static-package"]], "deeponto.bert.static.bert_static_base module": [[2, "module-deeponto.bert.static.bert_static_base"]], "deeponto.bert.static.bert_static_embeds module": [[2, "module-deeponto.bert.static.bert_static_embeds"]], "deeponto.bert.static.bert_static_seq_classifier module": [[2, "module-deeponto.bert.static.bert_static_seq_classifier"]], "deeponto.bert.static.bert_static_subs module": [[2, "module-deeponto.bert.static.bert_static_subs"]], "deeponto.bert.train package": [[3, "deeponto-bert-train-package"]], "deeponto.bert.train.bert_train_base module": [[3, "module-deeponto.bert.train.bert_train_base"]], "deeponto.bert.train.bert_train_seq_classfier module": [[3, "module-deeponto.bert.train.bert_train_seq_classfier"]], "deeponto.bert.train.bert_train_subs module": [[3, "module-deeponto.bert.train.bert_train_subs"]], "deeponto.config package": [[4, "deeponto-config-package"]], "deeponto.config.input_config module": [[4, "module-deeponto.config.input_config"]], "deeponto.data package": [[5, "deeponto-data-package"]], "deeponto.data.align package": [[6, "deeponto-data-align-package"]], "deeponto.data.align.cand_maps module": [[6, "module-deeponto.data.align.cand_maps"]], "deeponto.data.align.subs_maps module": [[6, "module-deeponto.data.align.subs_maps"]], "deeponto.data.align.text_semantics_corpora module": [[6, "module-deeponto.data.align.text_semantics_corpora"]], "deeponto.data.infer package": [[7, "deeponto-data-infer-package"]], "deeponto.data.infer.infer_utils module": [[7, "module-deeponto.data.infer.infer_utils"]], "deeponto.data.infer.subs package": [[8, "deeponto-data-infer-subs-package"]], "deeponto.data.infer.subs.atomic_subs module": [[8, "module-deeponto.data.infer.subs.atomic_subs"]], "deeponto.data.infer.subs.complex_subs module": [[8, "module-deeponto.data.infer.subs.complex_subs"]], "deeponto.data.infer.subs.subs_base module": [[8, "module-deeponto.data.infer.subs.subs_base"]], "deeponto.evaluation package": [[9, "deeponto-evaluation-package"]], "deeponto.evaluation.align_eval module": [[9, "module-deeponto.evaluation.align_eval"]], "deeponto.evaluation.eval_metrics module": [[9, "module-deeponto.evaluation.eval_metrics"]], "deeponto.models package": [[10, "deeponto-models-package"]], "deeponto.models.pipeline_base module": [[10, "module-deeponto.models.pipeline_base"]], "deeponto.models.align package": [[11, "deeponto-models-align-package"]], "deeponto.models.align.align_base module": [[11, "module-deeponto.models.align.align_base"]], "deeponto.models.align.align_pipeline module": [[11, "module-deeponto.models.align.align_pipeline"]], "deeponto.models.align.bertmap module": [[11, "module-deeponto.models.align.bertmap"]], "deeponto.models.align.edit_sim module": [[11, "module-deeponto.models.align.edit_sim"]], "deeponto.models.align.string_match module": [[11, "module-deeponto.models.align.string_match"]], "deeponto.models.align.logmap_java package": [[12, "deeponto-models-align-logmap-java-package"]], "deeponto.models.align.logmap_java.java-dependencies package": [[13, "deeponto-models-align-logmap-java-java-dependencies-package"]], "deeponto.models.infer package": [[14, "deeponto-models-infer-package"]], "deeponto.models.infer.infer_pipeline module": [[14, "module-deeponto.models.infer.infer_pipeline"]], "deeponto.models.infer.deprecated package": [[15, "deeponto-models-infer-deprecated-package"]], "deeponto.models.infer.deprecated.inference_pipeline module": [[15, "module-deeponto.models.infer.deprecated.inference_pipeline"]], "deeponto.models.infer.deprecated.manual module": [[15, "module-deeponto.models.infer.deprecated.manual"]], "deeponto.onto package": [[16, "deeponto-onto-package"]], "deeponto.onto.iris module": [[16, "module-deeponto.onto.iris"]], "deeponto.onto.mapping module": [[16, "module-deeponto.onto.mapping"]], "deeponto.onto.ontology module": [[16, "module-deeponto.onto.ontology"]], "deeponto.onto.ontology_subs module": [[16, "module-deeponto.onto.ontology_subs"]], "deeponto.onto.graph package": [[17, "deeponto-onto-graph-package"]], "deeponto.onto.graph.graph_utils module": [[17, "module-deeponto.onto.graph.graph_utils"]], "deeponto.onto.graph.iter_map_extend module": [[17, "module-deeponto.onto.graph.iter_map_extend"]], "deeponto.onto.logic package": [[18, "deeponto-onto-logic-package"]], "deeponto.onto.logic.logic_utils module": [[18, "module-deeponto.onto.logic.logic_utils"]], "deeponto.onto.logic.reasoner module": [[18, "module-deeponto.onto.logic.reasoner"]], "deeponto.onto.logic.parser package": [[19, "deeponto-onto-logic-parser-package"]], "deeponto.onto.logic.parser.axiom_parser_base module": [[19, "module-deeponto.onto.logic.parser.axiom_parser_base"]], "deeponto.onto.logic.parser.equiv_parser module": [[19, "module-deeponto.onto.logic.parser.equiv_parser"]], "deeponto.onto.prune package": [[20, "deeponto-onto-prune-package"]], "deeponto.onto.prune.pruning module": [[20, "module-deeponto.onto.prune.pruning"]], "deeponto.onto.text package": [[21, "deeponto-onto-text-package"]], "deeponto.onto.text.text_utils module": [[21, "module-deeponto.onto.text.text_utils"]], "deeponto.onto.text.thesaurus module": [[21, "module-deeponto.onto.text.thesaurus"]], "deeponto.onto.text.tokenizer module": [[21, "module-deeponto.onto.text.tokenizer"]], "deeponto.utils package": [[22, "deeponto-utils-package"]], "deeponto.utils.general_utils module": [[22, "module-deeponto.utils.general_utils"]], "deeponto.utils.logging module": [[22, "module-deeponto.utils.logging"]], "###                            example                             ###": [[22, "example"]], "deeponto.utils.oaei_utils module": [[22, "module-deeponto.utils.oaei_utils"]], "deeponto.utils.tree module": [[22, "module-deeponto.utils.tree"]], "Welcome to DeepOnto\u2019s documentation!": [[23, "welcome-to-deeponto-s-documentation"]], "Contents:": [[23, null]], "Indices and tables": [[23, "indices-and-tables"]], "deeponto": [[24, "deeponto"]]}, "indexentries": {"flaggedobj (class in deeponto.flagged_obj)": [[0, "deeponto.flagged_obj.FlaggedObj"]], "savedobj (class in deeponto.saved_obj)": [[0, "deeponto.saved_obj.SavedObj"]], "copy2() (deeponto.saved_obj.savedobj static method)": [[0, "deeponto.saved_obj.SavedObj.copy2"]], "deeponto": [[0, "module-deeponto"]], "deeponto.flagged_obj": [[0, "module-deeponto.flagged_obj"]], "deeponto.saved_obj": [[0, "module-deeponto.saved_obj"]], "from_new() (deeponto.saved_obj.savedobj class method)": [[0, "deeponto.saved_obj.SavedObj.from_new"]], "from_saved() (deeponto.saved_obj.savedobj class method)": [[0, "deeponto.saved_obj.SavedObj.from_saved"]], "init_jvm() (in module deeponto)": [[0, "deeponto.init_jvm"]], "load_json() (deeponto.saved_obj.savedobj static method)": [[0, "deeponto.saved_obj.SavedObj.load_json"]], "load_pkl() (deeponto.saved_obj.savedobj static method)": [[0, "deeponto.saved_obj.SavedObj.load_pkl"]], "module": [[0, "module-deeponto"], [0, "module-deeponto.flagged_obj"], [0, "module-deeponto.saved_obj"], [1, "module-deeponto.bert"], [1, "module-deeponto.bert.bert_args"], [2, "module-deeponto.bert.static"], [2, "module-deeponto.bert.static.bert_static_base"], [2, "module-deeponto.bert.static.bert_static_embeds"], [2, "module-deeponto.bert.static.bert_static_seq_classifier"], [2, "module-deeponto.bert.static.bert_static_subs"], [3, "module-deeponto.bert.train"], [3, "module-deeponto.bert.train.bert_train_base"], [3, "module-deeponto.bert.train.bert_train_seq_classfier"], [3, "module-deeponto.bert.train.bert_train_subs"], [4, "module-deeponto.config"], [4, "module-deeponto.config.input_config"], [5, "module-deeponto.data"], [6, "module-deeponto.data.align"], [6, "module-deeponto.data.align.cand_maps"], [6, "module-deeponto.data.align.subs_maps"], [6, "module-deeponto.data.align.text_semantics_corpora"], [7, "module-deeponto.data.infer"], [7, "module-deeponto.data.infer.infer_utils"], [8, "module-deeponto.data.infer.subs"], [8, "module-deeponto.data.infer.subs.atomic_subs"], [8, "module-deeponto.data.infer.subs.complex_subs"], [8, "module-deeponto.data.infer.subs.subs_base"], [9, "module-deeponto.evaluation"], [9, "module-deeponto.evaluation.align_eval"], [9, "module-deeponto.evaluation.eval_metrics"], [10, "module-deeponto.models"], [10, "module-deeponto.models.pipeline_base"], [11, "module-deeponto.models.align"], [11, "module-deeponto.models.align.align_base"], [11, "module-deeponto.models.align.align_pipeline"], [11, "module-deeponto.models.align.bertmap"], [11, "module-deeponto.models.align.edit_sim"], [11, "module-deeponto.models.align.string_match"], [12, "module-deeponto.models.align.logmap_java"], [14, "module-deeponto.models.infer"], [14, "module-deeponto.models.infer.infer_pipeline"], [15, "module-deeponto.models.infer.deprecated"], [15, "module-deeponto.models.infer.deprecated.inference_pipeline"], [15, "module-deeponto.models.infer.deprecated.manual"], [16, "module-deeponto.onto"], [16, "module-deeponto.onto.iris"], [16, "module-deeponto.onto.mapping"], [16, "module-deeponto.onto.ontology"], [16, "module-deeponto.onto.ontology_subs"], [17, "module-deeponto.onto.graph"], [17, "module-deeponto.onto.graph.graph_utils"], [17, "module-deeponto.onto.graph.iter_map_extend"], [18, "module-deeponto.onto.logic"], [18, "module-deeponto.onto.logic.logic_utils"], [18, "module-deeponto.onto.logic.reasoner"], [19, "module-deeponto.onto.logic.parser"], [19, "module-deeponto.onto.logic.parser.axiom_parser_base"], [19, "module-deeponto.onto.logic.parser.equiv_parser"], [20, "module-deeponto.onto.prune"], [20, "module-deeponto.onto.prune.pruning"], [21, "module-deeponto.onto.text"], [21, "module-deeponto.onto.text.text_utils"], [21, "module-deeponto.onto.text.thesaurus"], [21, "module-deeponto.onto.text.tokenizer"], [22, "module-deeponto.utils"], [22, "module-deeponto.utils.general_utils"], [22, "module-deeponto.utils.logging"], [22, "module-deeponto.utils.oaei_utils"], [22, "module-deeponto.utils.tree"]], "print_json() (deeponto.saved_obj.savedobj static method)": [[0, "deeponto.saved_obj.SavedObj.print_json"]], "renew() (deeponto.flagged_obj.flaggedobj method)": [[0, "deeponto.flagged_obj.FlaggedObj.renew"]], "report() (deeponto.saved_obj.savedobj method)": [[0, "deeponto.saved_obj.SavedObj.report"]], "save_instance() (deeponto.saved_obj.savedobj method)": [[0, "deeponto.saved_obj.SavedObj.save_instance"]], "save_json() (deeponto.saved_obj.savedobj static method)": [[0, "deeponto.saved_obj.SavedObj.save_json"]], "save_pkl() (deeponto.saved_obj.savedobj static method)": [[0, "deeponto.saved_obj.SavedObj.save_pkl"]], "switch() (deeponto.flagged_obj.flaggedobj method)": [[0, "deeponto.flagged_obj.FlaggedObj.switch"]], "bertarguments (class in deeponto.bert.bert_args)": [[1, "deeponto.bert.bert_args.BertArguments"]], "deeponto.bert": [[1, "module-deeponto.bert"]], "deeponto.bert.bert_args": [[1, "module-deeponto.bert.bert_args"]], "generate_training_args() (deeponto.bert.bert_args.bertarguments method)": [[1, "deeponto.bert.bert_args.BertArguments.generate_training_args"]], "bertstaticsubs (class in deeponto.bert.static.bert_static_subs)": [[2, "deeponto.bert.static.bert_static_subs.BERTStaticSubs"]], "bertstaticbase (class in deeponto.bert.static.bert_static_base)": [[2, "deeponto.bert.static.bert_static_base.BertStaticBase"]], "bertstaticforembeddings (class in deeponto.bert.static.bert_static_embeds)": [[2, "deeponto.bert.static.bert_static_embeds.BertStaticForEmbeddings"]], "bertstaticforsequenceclassification (class in deeponto.bert.static.bert_static_seq_classifier)": [[2, "deeponto.bert.static.bert_static_seq_classifier.BertStaticForSequenceClassification"]], "deeponto.bert.static": [[2, "module-deeponto.bert.static"]], "deeponto.bert.static.bert_static_base": [[2, "module-deeponto.bert.static.bert_static_base"]], "deeponto.bert.static.bert_static_embeds": [[2, "module-deeponto.bert.static.bert_static_embeds"]], "deeponto.bert.static.bert_static_seq_classifier": [[2, "module-deeponto.bert.static.bert_static_seq_classifier"]], "deeponto.bert.static.bert_static_subs": [[2, "module-deeponto.bert.static.bert_static_subs"]], "load_model() (deeponto.bert.static.bert_static_base.bertstaticbase method)": [[2, "deeponto.bert.static.bert_static_base.BertStaticBase.load_model"]], "load_model() (deeponto.bert.static.bert_static_embeds.bertstaticforembeddings method)": [[2, "deeponto.bert.static.bert_static_embeds.BertStaticForEmbeddings.load_model"]], "load_model() (deeponto.bert.static.bert_static_seq_classifier.bertstaticforsequenceclassification method)": [[2, "deeponto.bert.static.bert_static_seq_classifier.BertStaticForSequenceClassification.load_model"]], "ontotext_embeds() (deeponto.bert.static.bert_static_embeds.bertstaticforembeddings method)": [[2, "deeponto.bert.static.bert_static_embeds.BertStaticForEmbeddings.ontotext_embeds"]], "ontotext_embeds() (deeponto.bert.static.bert_static_subs.bertstaticsubs method)": [[2, "deeponto.bert.static.bert_static_subs.BERTStaticSubs.ontotext_embeds"]], "proc_input() (deeponto.bert.static.bert_static_base.bertstaticbase method)": [[2, "deeponto.bert.static.bert_static_base.BertStaticBase.proc_input"]], "sent_embeds_cls() (deeponto.bert.static.bert_static_embeds.bertstaticforembeddings method)": [[2, "deeponto.bert.static.bert_static_embeds.BertStaticForEmbeddings.sent_embeds_cls"]], "sent_embeds_cls() (deeponto.bert.static.bert_static_subs.bertstaticsubs method)": [[2, "deeponto.bert.static.bert_static_subs.BERTStaticSubs.sent_embeds_cls"]], "sent_embeds_mean() (deeponto.bert.static.bert_static_embeds.bertstaticforembeddings method)": [[2, "deeponto.bert.static.bert_static_embeds.BertStaticForEmbeddings.sent_embeds_mean"]], "sent_embeds_mean() (deeponto.bert.static.bert_static_subs.bertstaticsubs method)": [[2, "deeponto.bert.static.bert_static_subs.BERTStaticSubs.sent_embeds_mean"]], "word_embeds() (deeponto.bert.static.bert_static_embeds.bertstaticforembeddings method)": [[2, "deeponto.bert.static.bert_static_embeds.BertStaticForEmbeddings.word_embeds"]], "word_embeds() (deeponto.bert.static.bert_static_subs.bertstaticsubs method)": [[2, "deeponto.bert.static.bert_static_subs.BERTStaticSubs.word_embeds"]], "berttrainersubs (class in deeponto.bert.train.bert_train_subs)": [[3, "deeponto.bert.train.bert_train_subs.BERTTrainerSubs"]], "berttrainerbase (class in deeponto.bert.train.bert_train_base)": [[3, "deeponto.bert.train.bert_train_base.BertTrainerBase"]], "berttrainerforsequenceclassification (class in deeponto.bert.train.bert_train_seq_classfier)": [[3, "deeponto.bert.train.bert_train_seq_classfier.BertTrainerForSequenceClassification"]], "add_special_tokens() (deeponto.bert.train.bert_train_subs.berttrainersubs method)": [[3, "deeponto.bert.train.bert_train_subs.BERTTrainerSubs.add_special_tokens"]], "compute_metrics() (deeponto.bert.train.bert_train_base.berttrainerbase static method)": [[3, "deeponto.bert.train.bert_train_base.BertTrainerBase.compute_metrics"]], "compute_metrics() (deeponto.bert.train.bert_train_subs.berttrainersubs static method)": [[3, "deeponto.bert.train.bert_train_subs.BERTTrainerSubs.compute_metrics"]], "deeponto.bert.train": [[3, "module-deeponto.bert.train"]], "deeponto.bert.train.bert_train_base": [[3, "module-deeponto.bert.train.bert_train_base"]], "deeponto.bert.train.bert_train_seq_classfier": [[3, "module-deeponto.bert.train.bert_train_seq_classfier"]], "deeponto.bert.train.bert_train_subs": [[3, "module-deeponto.bert.train.bert_train_subs"]], "load_dataset() (deeponto.bert.train.bert_train_base.berttrainerbase method)": [[3, "deeponto.bert.train.bert_train_base.BertTrainerBase.load_dataset"]], "load_dataset() (deeponto.bert.train.bert_train_seq_classfier.berttrainerforsequenceclassification method)": [[3, "deeponto.bert.train.bert_train_seq_classfier.BertTrainerForSequenceClassification.load_dataset"]], "load_dataset() (deeponto.bert.train.bert_train_subs.berttrainersubs method)": [[3, "deeponto.bert.train.bert_train_subs.BERTTrainerSubs.load_dataset"]], "load_model() (deeponto.bert.train.bert_train_base.berttrainerbase method)": [[3, "deeponto.bert.train.bert_train_base.BertTrainerBase.load_model"]], "load_model() (deeponto.bert.train.bert_train_seq_classfier.berttrainerforsequenceclassification method)": [[3, "deeponto.bert.train.bert_train_seq_classfier.BertTrainerForSequenceClassification.load_model"]], "train() (deeponto.bert.train.bert_train_base.berttrainerbase method)": [[3, "deeponto.bert.train.bert_train_base.BertTrainerBase.train"]], "train() (deeponto.bert.train.bert_train_subs.berttrainersubs method)": [[3, "deeponto.bert.train.bert_train_subs.BERTTrainerSubs.train"]], "inputconfig (class in deeponto.config.input_config)": [[4, "deeponto.config.input_config.InputConfig"]], "add_param_group() (deeponto.config.input_config.inputconfig static method)": [[4, "deeponto.config.input_config.InputConfig.add_param_group"]], "deeponto.config": [[4, "module-deeponto.config"]], "deeponto.config.input_config": [[4, "module-deeponto.config.input_config"]], "edit_config() (deeponto.config.input_config.inputconfig class method)": [[4, "deeponto.config.input_config.InputConfig.edit_config"]], "load_config() (deeponto.config.input_config.inputconfig class method)": [[4, "deeponto.config.input_config.InputConfig.load_config"]], "new_config() (deeponto.config.input_config.inputconfig class method)": [[4, "deeponto.config.input_config.InputConfig.new_config"]], "preview_and_save() (deeponto.config.input_config.inputconfig class method)": [[4, "deeponto.config.input_config.InputConfig.preview_and_save"]], "deeponto.data": [[5, "module-deeponto.data"]], "mappingcandidategenerator (class in deeponto.data.align.cand_maps)": [[6, "deeponto.data.align.cand_maps.MappingCandidateGenerator"]], "subsumptionmappinggenerator (class in deeponto.data.align.subs_maps)": [[6, "deeponto.data.align.subs_maps.SubsumptionMappingGenerator"]], "textsemanticscorpora (class in deeponto.data.align.text_semantics_corpora)": [[6, "deeponto.data.align.text_semantics_corpora.TextSemanticsCorpora"]], "textsemanticscorpusformappings (class in deeponto.data.align.text_semantics_corpora)": [[6, "deeponto.data.align.text_semantics_corpora.TextSemanticsCorpusforMappings"]], "textsemanticscorpusforonto (class in deeponto.data.align.text_semantics_corpora)": [[6, "deeponto.data.align.text_semantics_corpora.TextSemanticsCorpusforOnto"]], "add_samples_from_sub_corpus() (deeponto.data.align.text_semantics_corpora.textsemanticscorpora method)": [[6, "deeponto.data.align.text_semantics_corpora.TextSemanticsCorpora.add_samples_from_sub_corpus"]], "avoided_family_of() (deeponto.data.align.cand_maps.mappingcandidategenerator method)": [[6, "deeponto.data.align.cand_maps.MappingCandidateGenerator.avoided_family_of"]], "current_anchor_mappings() (deeponto.data.align.cand_maps.mappingcandidategenerator method)": [[6, "deeponto.data.align.cand_maps.MappingCandidateGenerator.current_anchor_mappings"]], "current_ref_dict() (deeponto.data.align.cand_maps.mappingcandidategenerator method)": [[6, "deeponto.data.align.cand_maps.MappingCandidateGenerator.current_ref_dict"]], "deeponto.data.align": [[6, "module-deeponto.data.align"]], "deeponto.data.align.cand_maps": [[6, "module-deeponto.data.align.cand_maps"]], "deeponto.data.align.subs_maps": [[6, "module-deeponto.data.align.subs_maps"]], "deeponto.data.align.text_semantics_corpora": [[6, "module-deeponto.data.align.text_semantics_corpora"]], "feed_auxiliary_ontos() (deeponto.data.align.text_semantics_corpora.textsemanticscorpora method)": [[6, "deeponto.data.align.text_semantics_corpora.TextSemanticsCorpora.feed_auxiliary_ontos"]], "idf_sample() (deeponto.data.align.cand_maps.mappingcandidategenerator method)": [[6, "deeponto.data.align.cand_maps.MappingCandidateGenerator.idf_sample"]], "init_anchors() (deeponto.data.align.cand_maps.mappingcandidategenerator method)": [[6, "deeponto.data.align.cand_maps.MappingCandidateGenerator.init_anchors"]], "mixed_sample() (deeponto.data.align.cand_maps.mappingcandidategenerator method)": [[6, "deeponto.data.align.cand_maps.MappingCandidateGenerator.mixed_sample"]], "neighbour_sample() (deeponto.data.align.cand_maps.mappingcandidategenerator method)": [[6, "deeponto.data.align.cand_maps.MappingCandidateGenerator.neighbour_sample"]], "online_subs_construct() (deeponto.data.align.subs_maps.subsumptionmappinggenerator method)": [[6, "deeponto.data.align.subs_maps.SubsumptionMappingGenerator.online_subs_construct"]], "preserved_tgt_iris() (deeponto.data.align.subs_maps.subsumptionmappinggenerator method)": [[6, "deeponto.data.align.subs_maps.SubsumptionMappingGenerator.preserved_tgt_iris"]], "random_sample() (deeponto.data.align.cand_maps.mappingcandidategenerator method)": [[6, "deeponto.data.align.cand_maps.MappingCandidateGenerator.random_sample"]], "remove_invalid_negatives() (deeponto.data.align.text_semantics_corpora.textsemanticscorpora static method)": [[6, "deeponto.data.align.text_semantics_corpora.TextSemanticsCorpora.remove_invalid_negatives"]], "renew_subs() (deeponto.data.align.subs_maps.subsumptionmappinggenerator method)": [[6, "deeponto.data.align.subs_maps.SubsumptionMappingGenerator.renew_subs"]], "report_sub_corpora_info() (deeponto.data.align.text_semantics_corpora.textsemanticscorpora method)": [[6, "deeponto.data.align.text_semantics_corpora.TextSemanticsCorpora.report_sub_corpora_info"]], "sample() (deeponto.data.align.cand_maps.mappingcandidategenerator method)": [[6, "deeponto.data.align.cand_maps.MappingCandidateGenerator.sample"]], "sample_for_all_one_side() (deeponto.data.align.cand_maps.mappingcandidategenerator method)": [[6, "deeponto.data.align.cand_maps.MappingCandidateGenerator.sample_for_all_one_side"]], "save_instance() (deeponto.data.align.text_semantics_corpora.textsemanticscorpora method)": [[6, "deeponto.data.align.text_semantics_corpora.TextSemanticsCorpora.save_instance"]], "save_instance() (deeponto.data.align.text_semantics_corpora.textsemanticscorpusformappings method)": [[6, "deeponto.data.align.text_semantics_corpora.TextSemanticsCorpusforMappings.save_instance"]], "save_instance() (deeponto.data.align.text_semantics_corpora.textsemanticscorpusforonto method)": [[6, "deeponto.data.align.text_semantics_corpora.TextSemanticsCorpusforOnto.save_instance"]], "static_subs_construct() (deeponto.data.align.subs_maps.subsumptionmappinggenerator method)": [[6, "deeponto.data.align.subs_maps.SubsumptionMappingGenerator.static_subs_construct"]], "subs_from_an_equiv() (deeponto.data.align.subs_maps.subsumptionmappinggenerator method)": [[6, "deeponto.data.align.subs_maps.SubsumptionMappingGenerator.subs_from_an_equiv"]], "subs_pairs_to_tsv() (deeponto.data.align.subs_maps.subsumptionmappinggenerator method)": [[6, "deeponto.data.align.subs_maps.SubsumptionMappingGenerator.subs_pairs_to_tsv"]], "validate_subs() (deeponto.data.align.subs_maps.subsumptionmappinggenerator method)": [[6, "deeponto.data.align.subs_maps.SubsumptionMappingGenerator.validate_subs"]], "inferenceprocessor (class in deeponto.data.infer.infer_utils)": [[7, "deeponto.data.infer.infer_utils.InferenceProcessor"]], "deeponto.data.infer": [[7, "module-deeponto.data.infer"]], "deeponto.data.infer.infer_utils": [[7, "module-deeponto.data.infer.infer_utils"]], "get_examples() (deeponto.data.infer.infer_utils.inferenceprocessor method)": [[7, "deeponto.data.infer.infer_utils.InferenceProcessor.get_examples"]], "load_inference_dataset() (in module deeponto.data.infer.infer_utils)": [[7, "deeponto.data.infer.infer_utils.load_inference_dataset"]], "load_prompt_data_from_huggingface() (in module deeponto.data.infer.infer_utils)": [[7, "deeponto.data.infer.infer_utils.load_prompt_data_from_huggingface"]], "load_prompt_data_from_table() (in module deeponto.data.infer.infer_utils)": [[7, "deeponto.data.infer.infer_utils.load_prompt_data_from_table"]], "atomicsubsumptionsampler (class in deeponto.data.infer.subs.atomic_subs)": [[8, "deeponto.data.infer.subs.atomic_subs.AtomicSubsumptionSampler"]], "complexsubsumptionsampler (class in deeponto.data.infer.subs.complex_subs)": [[8, "deeponto.data.infer.subs.complex_subs.ComplexSubsumptionSampler"]], "subsumptionsamplerbase (class in deeponto.data.infer.subs.subs_base)": [[8, "deeponto.data.infer.subs.subs_base.SubsumptionSamplerBase"]], "contradiction_pairs() (deeponto.data.infer.subs.atomic_subs.atomicsubsumptionsampler method)": [[8, "deeponto.data.infer.subs.atomic_subs.AtomicSubsumptionSampler.contradiction_pairs"]], "contradiction_pairs_from_equiv_axiom() (deeponto.data.infer.subs.complex_subs.complexsubsumptionsampler method)": [[8, "deeponto.data.infer.subs.complex_subs.ComplexSubsumptionSampler.contradiction_pairs_from_equiv_axiom"]], "deeponto.data.infer.subs": [[8, "module-deeponto.data.infer.subs"]], "deeponto.data.infer.subs.atomic_subs": [[8, "module-deeponto.data.infer.subs.atomic_subs"]], "deeponto.data.infer.subs.complex_subs": [[8, "module-deeponto.data.infer.subs.complex_subs"]], "deeponto.data.infer.subs.subs_base": [[8, "module-deeponto.data.infer.subs.subs_base"]], "entailment_pairs() (deeponto.data.infer.subs.atomic_subs.atomicsubsumptionsampler method)": [[8, "deeponto.data.infer.subs.atomic_subs.AtomicSubsumptionSampler.entailment_pairs"]], "entailment_pairs_from_equiv_axiom() (deeponto.data.infer.subs.complex_subs.complexsubsumptionsampler method)": [[8, "deeponto.data.infer.subs.complex_subs.ComplexSubsumptionSampler.entailment_pairs_from_equiv_axiom"]], "init_subs() (deeponto.data.infer.subs.atomic_subs.atomicsubsumptionsampler method)": [[8, "deeponto.data.infer.subs.atomic_subs.AtomicSubsumptionSampler.init_subs"]], "init_subs() (deeponto.data.infer.subs.complex_subs.complexsubsumptionsampler method)": [[8, "deeponto.data.infer.subs.complex_subs.ComplexSubsumptionSampler.init_subs"]], "init_subs() (deeponto.data.infer.subs.subs_base.subsumptionsamplerbase method)": [[8, "deeponto.data.infer.subs.subs_base.SubsumptionSamplerBase.init_subs"]], "random_atomic_class() (deeponto.data.infer.subs.subs_base.subsumptionsamplerbase method)": [[8, "deeponto.data.infer.subs.subs_base.SubsumptionSamplerBase.random_atomic_class"]], "random_atomic_class_pair() (deeponto.data.infer.subs.subs_base.subsumptionsamplerbase method)": [[8, "deeponto.data.infer.subs.subs_base.SubsumptionSamplerBase.random_atomic_class_pair"]], "random_corrupt() (deeponto.data.infer.subs.complex_subs.complexsubsumptionsampler method)": [[8, "deeponto.data.infer.subs.complex_subs.ComplexSubsumptionSampler.random_corrupt"]], "random_object_property() (deeponto.data.infer.subs.subs_base.subsumptionsamplerbase method)": [[8, "deeponto.data.infer.subs.subs_base.SubsumptionSamplerBase.random_object_property"]], "random_select_lab_pair() (deeponto.data.infer.subs.atomic_subs.atomicsubsumptionsampler method)": [[8, "deeponto.data.infer.subs.atomic_subs.AtomicSubsumptionSampler.random_select_lab_pair"]], "random_sibling_atomic_class_for() (deeponto.data.infer.subs.subs_base.subsumptionsamplerbase method)": [[8, "deeponto.data.infer.subs.subs_base.SubsumptionSamplerBase.random_sibling_atomic_class_for"]], "random_sibling_atomic_class_pair() (deeponto.data.infer.subs.subs_base.subsumptionsamplerbase method)": [[8, "deeponto.data.infer.subs.subs_base.SubsumptionSamplerBase.random_sibling_atomic_class_pair"]], "sample() (deeponto.data.infer.subs.atomic_subs.atomicsubsumptionsampler method)": [[8, "deeponto.data.infer.subs.atomic_subs.AtomicSubsumptionSampler.sample"]], "sample() (deeponto.data.infer.subs.complex_subs.complexsubsumptionsampler method)": [[8, "deeponto.data.infer.subs.complex_subs.ComplexSubsumptionSampler.sample"]], "save() (deeponto.data.infer.subs.subs_base.subsumptionsamplerbase method)": [[8, "deeponto.data.infer.subs.subs_base.SubsumptionSamplerBase.save"]], "deeponto.evaluation": [[9, "module-deeponto.evaluation"]], "deeponto.evaluation.align_eval": [[9, "module-deeponto.evaluation.align_eval"]], "deeponto.evaluation.eval_metrics": [[9, "module-deeponto.evaluation.eval_metrics"]], "f1() (in module deeponto.evaluation.eval_metrics)": [[9, "deeponto.evaluation.eval_metrics.f1"]], "f_score() (in module deeponto.evaluation.eval_metrics)": [[9, "deeponto.evaluation.eval_metrics.f_score"]], "global_match_eval() (in module deeponto.evaluation.align_eval)": [[9, "deeponto.evaluation.align_eval.global_match_eval"]], "global_match_select() (in module deeponto.evaluation.align_eval)": [[9, "deeponto.evaluation.align_eval.global_match_select"]], "hits_at_k() (in module deeponto.evaluation.eval_metrics)": [[9, "deeponto.evaluation.eval_metrics.hits_at_k"]], "local_rank_eval() (in module deeponto.evaluation.align_eval)": [[9, "deeponto.evaluation.align_eval.local_rank_eval"]], "mean_reciprocal_rank() (in module deeponto.evaluation.eval_metrics)": [[9, "deeponto.evaluation.eval_metrics.mean_reciprocal_rank"]], "precision() (in module deeponto.evaluation.eval_metrics)": [[9, "deeponto.evaluation.eval_metrics.precision"]], "pred_thresholding() (in module deeponto.evaluation.align_eval)": [[9, "deeponto.evaluation.align_eval.pred_thresholding"]], "recall() (in module deeponto.evaluation.eval_metrics)": [[9, "deeponto.evaluation.eval_metrics.recall"]], "ontopipelinebase (class in deeponto.models.pipeline_base)": [[10, "deeponto.models.pipeline_base.OntoPipelineBase"]], "complete_path() (deeponto.models.pipeline_base.ontopipelinebase method)": [[10, "deeponto.models.pipeline_base.OntoPipelineBase.complete_path"]], "deeponto.models": [[10, "module-deeponto.models"]], "deeponto.models.pipeline_base": [[10, "module-deeponto.models.pipeline_base"]], "from_saved() (deeponto.models.pipeline_base.ontopipelinebase static method)": [[10, "deeponto.models.pipeline_base.OntoPipelineBase.from_saved"]], "load_model() (deeponto.models.pipeline_base.ontopipelinebase method)": [[10, "deeponto.models.pipeline_base.OntoPipelineBase.load_model"]], "load_onto() (deeponto.models.pipeline_base.ontopipelinebase method)": [[10, "deeponto.models.pipeline_base.OntoPipelineBase.load_onto"]], "run() (deeponto.models.pipeline_base.ontopipelinebase method)": [[10, "deeponto.models.pipeline_base.OntoPipelineBase.run"]], "bertmap (class in deeponto.models.align.bertmap)": [[11, "deeponto.models.align.bertmap.BERTMap"]], "editsimilarity (class in deeponto.models.align.edit_sim)": [[11, "deeponto.models.align.edit_sim.EditSimilarity"]], "ontoalignbase (class in deeponto.models.align.align_base)": [[11, "deeponto.models.align.align_base.OntoAlignBase"]], "ontoalignpipeline (class in deeponto.models.align.align_pipeline)": [[11, "deeponto.models.align.align_pipeline.OntoAlignPipeline"]], "stringmatch (class in deeponto.models.align.string_match)": [[11, "deeponto.models.align.string_match.StringMatch"]], "batch_pooling() (deeponto.models.align.bertmap.bertmap method)": [[11, "deeponto.models.align.bertmap.BERTMap.batch_pooling"]], "batched_lab_products_for_ent() (deeponto.models.align.align_base.ontoalignbase method)": [[11, "deeponto.models.align.align_base.OntoAlignBase.batched_lab_products_for_ent"]], "construct_corpora() (deeponto.models.align.bertmap.bertmap method)": [[11, "deeponto.models.align.bertmap.BERTMap.construct_corpora"]], "current_global_mappings() (deeponto.models.align.align_base.ontoalignbase method)": [[11, "deeponto.models.align.align_base.OntoAlignBase.current_global_mappings"]], "deeponto.models.align": [[11, "module-deeponto.models.align"]], "deeponto.models.align.align_base": [[11, "module-deeponto.models.align.align_base"]], "deeponto.models.align.align_pipeline": [[11, "module-deeponto.models.align.align_pipeline"]], "deeponto.models.align.bertmap": [[11, "module-deeponto.models.align.bertmap"]], "deeponto.models.align.edit_sim": [[11, "module-deeponto.models.align.edit_sim"]], "deeponto.models.align.string_match": [[11, "module-deeponto.models.align.string_match"]], "ent_pair_score() (deeponto.models.align.align_base.ontoalignbase method)": [[11, "deeponto.models.align.align_base.OntoAlignBase.ent_pair_score"]], "ent_pair_score() (deeponto.models.align.bertmap.bertmap method)": [[11, "deeponto.models.align.bertmap.BERTMap.ent_pair_score"]], "ent_pair_score() (deeponto.models.align.string_match.stringmatch method)": [[11, "deeponto.models.align.string_match.StringMatch.ent_pair_score"]], "fixed_src_ent_pair_score() (deeponto.models.align.align_base.ontoalignbase method)": [[11, "deeponto.models.align.align_base.OntoAlignBase.fixed_src_ent_pair_score"]], "fixed_src_ent_pair_score() (deeponto.models.align.bertmap.bertmap method)": [[11, "deeponto.models.align.bertmap.BERTMap.fixed_src_ent_pair_score"]], "fixed_src_ent_pair_score() (deeponto.models.align.string_match.stringmatch method)": [[11, "deeponto.models.align.string_match.StringMatch.fixed_src_ent_pair_score"]], "global_mappings_for_ent() (deeponto.models.align.align_base.ontoalignbase method)": [[11, "deeponto.models.align.align_base.OntoAlignBase.global_mappings_for_ent"]], "global_mappings_for_ent() (deeponto.models.align.bertmap.bertmap method)": [[11, "deeponto.models.align.bertmap.BERTMap.global_mappings_for_ent"]], "global_mappings_for_ent() (deeponto.models.align.string_match.stringmatch method)": [[11, "deeponto.models.align.string_match.StringMatch.global_mappings_for_ent"]], "global_mappings_for_ent_chunk() (deeponto.models.align.align_base.ontoalignbase method)": [[11, "deeponto.models.align.align_base.OntoAlignBase.global_mappings_for_ent_chunk"]], "global_mappings_for_onto() (deeponto.models.align.align_base.ontoalignbase method)": [[11, "deeponto.models.align.align_base.OntoAlignBase.global_mappings_for_onto"]], "global_mappings_for_onto_multi_procs() (deeponto.models.align.align_base.ontoalignbase method)": [[11, "deeponto.models.align.align_base.OntoAlignBase.global_mappings_for_onto_multi_procs"]], "global_match() (deeponto.models.align.align_base.ontoalignbase method)": [[11, "deeponto.models.align.align_base.OntoAlignBase.global_match"]], "hyperparams_select() (deeponto.models.align.align_base.ontoalignbase method)": [[11, "deeponto.models.align.align_base.OntoAlignBase.hyperparams_select"]], "idf_select_for_ent() (deeponto.models.align.align_base.ontoalignbase method)": [[11, "deeponto.models.align.align_base.OntoAlignBase.idf_select_for_ent"]], "lab_products_for_ent() (deeponto.models.align.align_base.ontoalignbase method)": [[11, "deeponto.models.align.align_base.OntoAlignBase.lab_products_for_ent"]], "load_fine_tune_data() (deeponto.models.align.bertmap.bertmap method)": [[11, "deeponto.models.align.bertmap.BERTMap.load_fine_tune_data"]], "load_mappings() (deeponto.models.align.align_base.ontoalignbase method)": [[11, "deeponto.models.align.align_base.OntoAlignBase.load_mappings"]], "load_model() (deeponto.models.align.align_pipeline.ontoalignpipeline method)": [[11, "deeponto.models.align.align_pipeline.OntoAlignPipeline.load_model"]], "load_onto() (deeponto.models.align.align_pipeline.ontoalignpipeline method)": [[11, "deeponto.models.align.align_pipeline.OntoAlignPipeline.load_onto"]], "mapping_extension() (deeponto.models.align.bertmap.bertmap method)": [[11, "deeponto.models.align.bertmap.BERTMap.mapping_extension"]], "mapping_repair() (deeponto.models.align.bertmap.bertmap method)": [[11, "deeponto.models.align.bertmap.BERTMap.mapping_repair"]], "max_norm_edit_sim() (deeponto.models.align.string_match.stringmatch class method)": [[11, "deeponto.models.align.string_match.StringMatch.max_norm_edit_sim"]], "overlap() (deeponto.models.align.string_match.stringmatch static method)": [[11, "deeponto.models.align.string_match.StringMatch.overlap"]], "pair_score() (deeponto.models.align.align_base.ontoalignbase method)": [[11, "deeponto.models.align.align_base.OntoAlignBase.pair_score"]], "refinement() (deeponto.models.align.bertmap.bertmap method)": [[11, "deeponto.models.align.bertmap.BERTMap.refinement"]], "repair_formatting() (deeponto.models.align.bertmap.bertmap static method)": [[11, "deeponto.models.align.bertmap.BERTMap.repair_formatting"]], "run() (deeponto.models.align.align_pipeline.ontoalignpipeline method)": [[11, "deeponto.models.align.align_pipeline.OntoAlignPipeline.run"]], "string_match() (deeponto.models.align.bertmap.bertmap method)": [[11, "deeponto.models.align.bertmap.BERTMap.string_match"]], "train() (deeponto.models.align.bertmap.bertmap method)": [[11, "deeponto.models.align.bertmap.BERTMap.train"]], "deeponto.models.align.logmap_java": [[12, "module-deeponto.models.align.logmap_java"]], "build_dataloader() (in module deeponto.models.infer.infer_pipeline)": [[14, "deeponto.models.infer.infer_pipeline.build_dataloader"]], "deeponto.models.infer": [[14, "module-deeponto.models.infer"]], "deeponto.models.infer.infer_pipeline": [[14, "module-deeponto.models.infer.infer_pipeline"]], "run_inference() (in module deeponto.models.infer.infer_pipeline)": [[14, "deeponto.models.infer.infer_pipeline.run_inference"]], "trainer() (in module deeponto.models.infer.infer_pipeline)": [[14, "deeponto.models.infer.infer_pipeline.trainer"]], "inferencepipeline (class in deeponto.models.infer.deprecated.inference_pipeline)": [[15, "deeponto.models.infer.deprecated.inference_pipeline.InferencePipeline"]], "deeponto.models.infer.deprecated": [[15, "module-deeponto.models.infer.deprecated"]], "deeponto.models.infer.deprecated.inference_pipeline": [[15, "module-deeponto.models.infer.deprecated.inference_pipeline"]], "deeponto.models.infer.deprecated.manual": [[15, "module-deeponto.models.infer.deprecated.manual"]], "inference_label_words() (in module deeponto.models.infer.deprecated.manual)": [[15, "deeponto.models.infer.deprecated.manual.inference_label_words"]], "inference_templates() (in module deeponto.models.infer.deprecated.manual)": [[15, "deeponto.models.infer.deprecated.manual.inference_templates"]], "run() (deeponto.models.infer.deprecated.inference_pipeline.inferencepipeline method)": [[15, "deeponto.models.infer.deprecated.inference_pipeline.InferencePipeline.run"]], "train() (deeponto.models.infer.deprecated.inference_pipeline.inferencepipeline method)": [[15, "deeponto.models.infer.deprecated.inference_pipeline.InferencePipeline.train"]], "anchormapping (class in deeponto.onto.mapping)": [[16, "deeponto.onto.mapping.AnchorMapping"]], "anchoredontomappings (class in deeponto.onto.mapping)": [[16, "deeponto.onto.mapping.AnchoredOntoMappings"]], "entitymapping (class in deeponto.onto.mapping)": [[16, "deeponto.onto.mapping.EntityMapping"]], "entitymappinglist (class in deeponto.onto.mapping)": [[16, "deeponto.onto.mapping.EntityMappingList"]], "ontomappings (class in deeponto.onto.mapping)": [[16, "deeponto.onto.mapping.OntoMappings"]], "ontology (class in deeponto.onto.ontology)": [[16, "deeponto.onto.ontology.Ontology"]], "ontologysubs (class in deeponto.onto.ontology_subs)": [[16, "deeponto.onto.ontology_subs.OntologySubs"]], "add() (deeponto.onto.mapping.anchoredontomappings method)": [[16, "deeponto.onto.mapping.AnchoredOntoMappings.add"]], "add() (deeponto.onto.mapping.ontomappings method)": [[16, "deeponto.onto.mapping.OntoMappings.add"]], "add_candidate() (deeponto.onto.mapping.anchormapping method)": [[16, "deeponto.onto.mapping.AnchorMapping.add_candidate"]], "add_many() (deeponto.onto.mapping.anchoredontomappings method)": [[16, "deeponto.onto.mapping.AnchoredOntoMappings.add_many"]], "add_many() (deeponto.onto.mapping.ontomappings method)": [[16, "deeponto.onto.mapping.OntoMappings.add_many"]], "append() (deeponto.onto.mapping.entitymappinglist method)": [[16, "deeponto.onto.mapping.EntityMappingList.append"]], "build_inv_idx() (deeponto.onto.ontology.ontology method)": [[16, "deeponto.onto.ontology.Ontology.build_inv_idx"]], "classes (deeponto.onto.ontology.ontology property)": [[16, "deeponto.onto.ontology.Ontology.classes"]], "complement_iri_name_to_label() (deeponto.onto.ontology_subs.ontologysubs method)": [[16, "deeponto.onto.ontology_subs.OntologySubs.complement_iri_name_to_label"]], "deeponto.onto": [[16, "module-deeponto.onto"]], "deeponto.onto.iris": [[16, "module-deeponto.onto.iris"]], "deeponto.onto.mapping": [[16, "module-deeponto.onto.mapping"]], "deeponto.onto.ontology": [[16, "module-deeponto.onto.ontology"]], "deeponto.onto.ontology_subs": [[16, "module-deeponto.onto.ontology_subs"]], "existed_cands_for_anchor() (deeponto.onto.mapping.anchoredontomappings method)": [[16, "deeponto.onto.mapping.AnchoredOntoMappings.existed_cands_for_anchor"]], "fill_scored_maps() (deeponto.onto.mapping.anchoredontomappings method)": [[16, "deeponto.onto.mapping.AnchoredOntoMappings.fill_scored_maps"]], "flattened() (deeponto.onto.mapping.anchoredontomappings method)": [[16, "deeponto.onto.mapping.AnchoredOntoMappings.flattened"]], "from_new() (deeponto.onto.ontology.ontology class method)": [[16, "deeponto.onto.ontology.Ontology.from_new"]], "from_saved() (deeponto.onto.ontology.ontology class method)": [[16, "deeponto.onto.ontology.Ontology.from_saved"]], "get_all_restriction_ancestors() (deeponto.onto.ontology_subs.ontologysubs static method)": [[16, "deeponto.onto.ontology_subs.OntologySubs.get_all_restriction_ancestors"]], "get_declared_named_class_subsumption() (deeponto.onto.ontology_subs.ontologysubs method)": [[16, "deeponto.onto.ontology_subs.OntologySubs.get_declared_named_class_subsumption"]], "get_declared_restriction_subsumption() (deeponto.onto.ontology_subs.ontologysubs method)": [[16, "deeponto.onto.ontology_subs.OntologySubs.get_declared_restriction_subsumption"]], "get_named_classes() (deeponto.onto.ontology_subs.ontologysubs method)": [[16, "deeponto.onto.ontology_subs.OntologySubs.get_named_classes"]], "get_negative_sample() (deeponto.onto.ontology_subs.ontologysubs method)": [[16, "deeponto.onto.ontology_subs.OntologySubs.get_negative_sample"]], "get_one_hop_neighbours() (deeponto.onto.ontology_subs.ontologysubs static method)": [[16, "deeponto.onto.ontology_subs.OntologySubs.get_one_hop_neighbours"]], "idf_select() (deeponto.onto.ontology.ontology method)": [[16, "deeponto.onto.ontology.Ontology.idf_select"]], "iri (deeponto.onto.ontology.ontology property)": [[16, "deeponto.onto.ontology.Ontology.iri"]], "is_existed_mapping() (deeponto.onto.mapping.ontomappings method)": [[16, "deeponto.onto.mapping.OntoMappings.is_existed_mapping"]], "is_normal_named_class() (deeponto.onto.ontology_subs.ontologysubs static method)": [[16, "deeponto.onto.ontology_subs.OntologySubs.is_normal_named_class"]], "is_target_some_restriction() (deeponto.onto.ontology_subs.ontologysubs static method)": [[16, "deeponto.onto.ontology_subs.OntologySubs.is_target_some_restriction"]], "name_from_iri() (deeponto.onto.ontology.ontology class method)": [[16, "deeponto.onto.ontology.Ontology.name_from_iri"]], "obj_from_iri() (deeponto.onto.ontology.ontology class method)": [[16, "deeponto.onto.ontology.Ontology.obj_from_iri"]], "path_select() (deeponto.onto.ontology.ontology method)": [[16, "deeponto.onto.ontology.Ontology.path_select"]], "path_subsumptions() (deeponto.onto.ontology_subs.ontologysubs static method)": [[16, "deeponto.onto.ontology_subs.OntologySubs.path_subsumptions"]], "read_table_mappings() (deeponto.onto.mapping.anchoredontomappings class method)": [[16, "deeponto.onto.mapping.AnchoredOntoMappings.read_table_mappings"]], "read_table_mappings() (deeponto.onto.mapping.entitymappinglist class method)": [[16, "deeponto.onto.mapping.EntityMappingList.read_table_mappings"]], "read_table_mappings() (deeponto.onto.mapping.ontomappings class method)": [[16, "deeponto.onto.mapping.OntoMappings.read_table_mappings"]], "restriction_to_label() (deeponto.onto.ontology_subs.ontologysubs method)": [[16, "deeponto.onto.ontology_subs.OntologySubs.restriction_to_label"]], "save_instance() (deeponto.onto.mapping.anchoredontomappings method)": [[16, "deeponto.onto.mapping.AnchoredOntoMappings.save_instance"]], "save_instance() (deeponto.onto.mapping.ontomappings method)": [[16, "deeponto.onto.mapping.OntoMappings.save_instance"]], "save_instance() (deeponto.onto.ontology.ontology method)": [[16, "deeponto.onto.ontology.Ontology.save_instance"]], "search_ent_labs() (deeponto.onto.ontology.ontology method)": [[16, "deeponto.onto.ontology.Ontology.search_ent_labs"]], "set_masked_subsumptions() (deeponto.onto.ontology_subs.ontologysubs method)": [[16, "deeponto.onto.ontology_subs.OntologySubs.set_masked_subsumptions"]], "sib_labs() (deeponto.onto.ontology.ontology method)": [[16, "deeponto.onto.ontology.Ontology.sib_labs"]], "sorted() (deeponto.onto.mapping.entitymappinglist method)": [[16, "deeponto.onto.mapping.EntityMappingList.sorted"]], "subclass_to_string() (deeponto.onto.ontology_subs.ontologysubs method)": [[16, "deeponto.onto.ontology_subs.OntologySubs.subclass_to_string"]], "subsumption_to_str() (deeponto.onto.ontology_subs.ontologysubs method)": [[16, "deeponto.onto.ontology_subs.OntologySubs.subsumption_to_str"]], "subsumptions_to_samples() (deeponto.onto.ontology_subs.ontologysubs method)": [[16, "deeponto.onto.ontology_subs.OntologySubs.subsumptions_to_samples"]], "supclass_to_samples() (deeponto.onto.ontology_subs.ontologysubs method)": [[16, "deeponto.onto.ontology_subs.OntologySubs.supclass_to_samples"]], "to_df() (deeponto.onto.mapping.anchoredontomappings method)": [[16, "deeponto.onto.mapping.AnchoredOntoMappings.to_df"]], "to_df() (deeponto.onto.mapping.ontomappings method)": [[16, "deeponto.onto.mapping.OntoMappings.to_df"]], "to_tuple() (deeponto.onto.mapping.entitymapping method)": [[16, "deeponto.onto.mapping.EntityMapping.to_tuple"]], "to_tuples() (deeponto.onto.mapping.entitymappinglist method)": [[16, "deeponto.onto.mapping.EntityMappingList.to_tuples"]], "to_tuples() (deeponto.onto.mapping.ontomappings method)": [[16, "deeponto.onto.mapping.OntoMappings.to_tuples"]], "topk() (deeponto.onto.mapping.entitymappinglist method)": [[16, "deeponto.onto.mapping.EntityMappingList.topk"]], "topks() (deeponto.onto.mapping.ontomappings method)": [[16, "deeponto.onto.mapping.OntoMappings.topks"]], "topks_for_ent() (deeponto.onto.mapping.ontomappings method)": [[16, "deeponto.onto.mapping.OntoMappings.topks_for_ent"]], "traversal_subsumptions() (deeponto.onto.ontology_subs.ontologysubs static method)": [[16, "deeponto.onto.ontology_subs.OntologySubs.traversal_subsumptions"]], "unscored_cand_maps() (deeponto.onto.mapping.anchoredontomappings method)": [[16, "deeponto.onto.mapping.AnchoredOntoMappings.unscored_cand_maps"]], "validate_anchor_mapping() (deeponto.onto.mapping.anchoredontomappings method)": [[16, "deeponto.onto.mapping.AnchoredOntoMappings.validate_anchor_mapping"]], "validate_mapping() (deeponto.onto.mapping.ontomappings method)": [[16, "deeponto.onto.mapping.OntoMappings.validate_mapping"]], "iterativemappingextension (class in deeponto.onto.graph.iter_map_extend)": [[17, "deeponto.onto.graph.iter_map_extend.IterativeMappingExtension"]], "branch_head_of() (in module deeponto.onto.graph.graph_utils)": [[17, "deeponto.onto.graph.graph_utils.branch_head_of"]], "check_ent_pair() (deeponto.onto.graph.iter_map_extend.iterativemappingextension method)": [[17, "deeponto.onto.graph.iter_map_extend.IterativeMappingExtension.check_ent_pair"]], "deeponto.onto.graph": [[17, "module-deeponto.onto.graph"]], "deeponto.onto.graph.graph_utils": [[17, "module-deeponto.onto.graph.graph_utils"]], "deeponto.onto.graph.iter_map_extend": [[17, "module-deeponto.onto.graph.iter_map_extend"]], "depth_max() (in module deeponto.onto.graph.graph_utils)": [[17, "deeponto.onto.graph.graph_utils.depth_max"]], "depth_min() (in module deeponto.onto.graph.graph_utils)": [[17, "deeponto.onto.graph.graph_utils.depth_min"]], "neighbours_of() (in module deeponto.onto.graph.graph_utils)": [[17, "deeponto.onto.graph.graph_utils.neighbours_of"]], "one_hob_extend() (deeponto.onto.graph.iter_map_extend.iterativemappingextension method)": [[17, "deeponto.onto.graph.iter_map_extend.IterativeMappingExtension.one_hob_extend"]], "renew_frontier() (deeponto.onto.graph.iter_map_extend.iterativemappingextension method)": [[17, "deeponto.onto.graph.iter_map_extend.IterativeMappingExtension.renew_frontier"]], "run_extension() (deeponto.onto.graph.iter_map_extend.iterativemappingextension method)": [[17, "deeponto.onto.graph.iter_map_extend.IterativeMappingExtension.run_extension"]], "sub_thing_classes_of() (in module deeponto.onto.graph.graph_utils)": [[17, "deeponto.onto.graph.graph_utils.sub_thing_classes_of"]], "super_thing_classes_of() (in module deeponto.onto.graph.graph_utils)": [[17, "deeponto.onto.graph.graph_utils.super_thing_classes_of"]], "thing_class_ancestors_of() (in module deeponto.onto.graph.graph_utils)": [[17, "deeponto.onto.graph.graph_utils.thing_class_ancestors_of"]], "thing_class_descendants_of() (in module deeponto.onto.graph.graph_utils)": [[17, "deeponto.onto.graph.graph_utils.thing_class_descendants_of"]], "owlnothing (deeponto.onto.logic.reasoner.owlreasoner property)": [[18, "deeponto.onto.logic.reasoner.OWLReasoner.OWLNothing"]], "owlreasoner (class in deeponto.onto.logic.reasoner)": [[18, "deeponto.onto.logic.reasoner.OWLReasoner"]], "owlthing (deeponto.onto.logic.reasoner.owlreasoner property)": [[18, "deeponto.onto.logic.reasoner.OWLReasoner.OWLThing"]], "check_assumed_disjoint() (deeponto.onto.logic.reasoner.owlreasoner method)": [[18, "deeponto.onto.logic.reasoner.OWLReasoner.check_assumed_disjoint"]], "check_common_descendants() (deeponto.onto.logic.reasoner.owlreasoner method)": [[18, "deeponto.onto.logic.reasoner.OWLReasoner.check_common_descendants"]], "check_disjoint() (deeponto.onto.logic.reasoner.owlreasoner method)": [[18, "deeponto.onto.logic.reasoner.OWLReasoner.check_disjoint"]], "check_disjoint() (in module deeponto.onto.logic.logic_utils)": [[18, "deeponto.onto.logic.logic_utils.check_disjoint"]], "check_negative_subsumption() (deeponto.onto.logic.reasoner.owlreasoner method)": [[18, "deeponto.onto.logic.reasoner.OWLReasoner.check_negative_subsumption"]], "check_subsumption() (deeponto.onto.logic.reasoner.owlreasoner method)": [[18, "deeponto.onto.logic.reasoner.OWLReasoner.check_subsumption"]], "deeponto.onto.logic": [[18, "module-deeponto.onto.logic"]], "deeponto.onto.logic.logic_utils": [[18, "module-deeponto.onto.logic.logic_utils"]], "deeponto.onto.logic.reasoner": [[18, "module-deeponto.onto.logic.reasoner"]], "determine() (deeponto.onto.logic.reasoner.owlreasoner static method)": [[18, "deeponto.onto.logic.reasoner.OWLReasoner.determine"]], "disjoints_from_iri() (in module deeponto.onto.logic.logic_utils)": [[18, "deeponto.onto.logic.logic_utils.disjoints_from_iri"]], "equiv_axioms (deeponto.onto.logic.reasoner.owlreasoner property)": [[18, "deeponto.onto.logic.reasoner.OWLReasoner.equiv_axioms"]], "getowlobjectfromiri() (deeponto.onto.logic.reasoner.owlreasoner method)": [[18, "deeponto.onto.logic.reasoner.OWLReasoner.getOWLObjectFromIRI"]], "getowlobjects() (deeponto.onto.logic.reasoner.owlreasoner method)": [[18, "deeponto.onto.logic.reasoner.OWLReasoner.getOWLObjects"]], "hasiri() (deeponto.onto.logic.reasoner.owlreasoner static method)": [[18, "deeponto.onto.logic.reasoner.OWLReasoner.hasIRI"]], "replace_entity() (deeponto.onto.logic.reasoner.owlreasoner method)": [[18, "deeponto.onto.logic.reasoner.OWLReasoner.replace_entity"]], "save_onto() (deeponto.onto.logic.reasoner.owlreasoner method)": [[18, "deeponto.onto.logic.reasoner.OWLReasoner.save_onto"]], "sibling_dict (deeponto.onto.logic.reasoner.owlreasoner property)": [[18, "deeponto.onto.logic.reasoner.OWLReasoner.sibling_dict"]], "sibling_pairs (deeponto.onto.logic.reasoner.owlreasoner property)": [[18, "deeponto.onto.logic.reasoner.OWLReasoner.sibling_pairs"]], "sub_entities_of() (deeponto.onto.logic.reasoner.owlreasoner method)": [[18, "deeponto.onto.logic.reasoner.OWLReasoner.sub_entities_of"]], "super_entities_of() (deeponto.onto.logic.reasoner.owlreasoner method)": [[18, "deeponto.onto.logic.reasoner.OWLReasoner.super_entities_of"]], "owlaxiomparserbase (class in deeponto.onto.logic.parser.axiom_parser_base)": [[19, "deeponto.onto.logic.parser.axiom_parser_base.OWLAxiomParserBase"]], "owlequivaxiomparser (class in deeponto.onto.logic.parser.equiv_parser)": [[19, "deeponto.onto.logic.parser.equiv_parser.OWLEquivAxiomParser"]], "abbr_axiom_text() (deeponto.onto.logic.parser.axiom_parser_base.owlaxiomparserbase method)": [[19, "deeponto.onto.logic.parser.axiom_parser_base.OWLAxiomParserBase.abbr_axiom_text"]], "deeponto.onto.logic.parser": [[19, "module-deeponto.onto.logic.parser"]], "deeponto.onto.logic.parser.axiom_parser_base": [[19, "module-deeponto.onto.logic.parser.axiom_parser_base"]], "deeponto.onto.logic.parser.equiv_parser": [[19, "module-deeponto.onto.logic.parser.equiv_parser"]], "fit() (deeponto.onto.logic.parser.equiv_parser.owlequivaxiomparser method)": [[19, "deeponto.onto.logic.parser.equiv_parser.OWLEquivAxiomParser.fit"]], "parse() (deeponto.onto.logic.parser.axiom_parser_base.owlaxiomparserbase method)": [[19, "deeponto.onto.logic.parser.axiom_parser_base.OWLAxiomParserBase.parse"]], "parse_and_atoms() (deeponto.onto.logic.parser.equiv_parser.owlequivaxiomparser method)": [[19, "deeponto.onto.logic.parser.equiv_parser.OWLEquivAxiomParser.parse_and_atoms"]], "parse_and_mixed() (deeponto.onto.logic.parser.equiv_parser.owlequivaxiomparser method)": [[19, "deeponto.onto.logic.parser.equiv_parser.OWLEquivAxiomParser.parse_and_mixed"]], "parse_atom_class() (deeponto.onto.logic.parser.equiv_parser.owlequivaxiomparser method)": [[19, "deeponto.onto.logic.parser.equiv_parser.OWLEquivAxiomParser.parse_atom_class"]], "parse_equiv() (deeponto.onto.logic.parser.equiv_parser.owlequivaxiomparser method)": [[19, "deeponto.onto.logic.parser.equiv_parser.OWLEquivAxiomParser.parse_equiv"]], "parse_ext_and_atoms() (deeponto.onto.logic.parser.equiv_parser.owlequivaxiomparser method)": [[19, "deeponto.onto.logic.parser.equiv_parser.OWLEquivAxiomParser.parse_ext_and_atoms"]], "parse_ext_atom() (deeponto.onto.logic.parser.equiv_parser.owlequivaxiomparser method)": [[19, "deeponto.onto.logic.parser.equiv_parser.OWLEquivAxiomParser.parse_ext_atom"]], "parse_obj_prop() (deeponto.onto.logic.parser.equiv_parser.owlequivaxiomparser method)": [[19, "deeponto.onto.logic.parser.equiv_parser.OWLEquivAxiomParser.parse_obj_prop"]], "parse_sub() (deeponto.onto.logic.parser.equiv_parser.owlequivaxiomparser method)": [[19, "deeponto.onto.logic.parser.equiv_parser.OWLEquivAxiomParser.parse_sub"]], "print_pattern() (deeponto.onto.logic.parser.equiv_parser.owlequivaxiomparser static method)": [[19, "deeponto.onto.logic.parser.equiv_parser.OWLEquivAxiomParser.print_pattern"]], "ontopruner (class in deeponto.onto.prune.pruning)": [[20, "deeponto.onto.prune.pruning.OntoPruner"]], "deeponto.onto.prune": [[20, "module-deeponto.onto.prune"]], "deeponto.onto.prune.pruning": [[20, "module-deeponto.onto.prune.pruning"]], "isolate_class() (deeponto.onto.prune.pruning.ontopruner static method)": [[20, "deeponto.onto.prune.pruning.OntoPruner.isolate_class"]], "jar_preserve() (deeponto.onto.prune.pruning.ontopruner static method)": [[20, "deeponto.onto.prune.pruning.OntoPruner.jar_preserve"]], "overlap_count() (deeponto.onto.prune.pruning.ontopruner static method)": [[20, "deeponto.onto.prune.pruning.OntoPruner.overlap_count"]], "run() (deeponto.onto.prune.pruning.ontopruner method)": [[20, "deeponto.onto.prune.pruning.OntoPruner.run"]], "simple_prune() (deeponto.onto.prune.pruning.ontopruner method)": [[20, "deeponto.onto.prune.pruning.OntoPruner.simple_prune"]], "thesaurus (class in deeponto.onto.text.thesaurus)": [[21, "deeponto.onto.text.thesaurus.Thesaurus"]], "tokenizer (class in deeponto.onto.text.tokenizer)": [[21, "deeponto.onto.text.tokenizer.Tokenizer"]], "abbr_iri() (in module deeponto.onto.text.text_utils)": [[21, "deeponto.onto.text.text_utils.abbr_iri"]], "add_matched_synonyms_from_mappings() (deeponto.onto.text.thesaurus.thesaurus method)": [[21, "deeponto.onto.text.thesaurus.Thesaurus.add_matched_synonyms_from_mappings"]], "add_synonyms_from_ontos() (deeponto.onto.text.thesaurus.thesaurus method)": [[21, "deeponto.onto.text.thesaurus.Thesaurus.add_synonyms_from_ontos"]], "child_labs() (in module deeponto.onto.text.text_utils)": [[21, "deeponto.onto.text.text_utils.child_labs"]], "connected_labels() (deeponto.onto.text.thesaurus.thesaurus static method)": [[21, "deeponto.onto.text.thesaurus.Thesaurus.connected_labels"]], "create_merged_section() (deeponto.onto.text.thesaurus.thesaurus method)": [[21, "deeponto.onto.text.thesaurus.Thesaurus.create_merged_section"]], "deeponto.onto.text": [[21, "module-deeponto.onto.text"]], "deeponto.onto.text.text_utils": [[21, "module-deeponto.onto.text.text_utils"]], "deeponto.onto.text.thesaurus": [[21, "module-deeponto.onto.text.thesaurus"]], "deeponto.onto.text.tokenizer": [[21, "module-deeponto.onto.text.tokenizer"]], "disjointness_negative_sampling() (deeponto.onto.text.thesaurus.thesaurus static method)": [[21, "deeponto.onto.text.thesaurus.Thesaurus.disjointness_negative_sampling"]], "from_pretrained() (deeponto.onto.text.tokenizer.tokenizer class method)": [[21, "deeponto.onto.text.tokenizer.Tokenizer.from_pretrained"]], "from_rule_based() (deeponto.onto.text.tokenizer.tokenizer class method)": [[21, "deeponto.onto.text.tokenizer.Tokenizer.from_rule_based"]], "idf_select() (in module deeponto.onto.text.text_utils)": [[21, "deeponto.onto.text.text_utils.idf_select"]], "is_valid_iri() (in module deeponto.onto.text.text_utils)": [[21, "deeponto.onto.text.text_utils.is_valid_iri"]], "lab_product() (in module deeponto.onto.text.text_utils)": [[21, "deeponto.onto.text.text_utils.lab_product"]], "labs_from_props() (in module deeponto.onto.text.text_utils)": [[21, "deeponto.onto.text.text_utils.labs_from_props"]], "merge_synonyms_by_transitivity() (deeponto.onto.text.thesaurus.thesaurus class method)": [[21, "deeponto.onto.text.thesaurus.Thesaurus.merge_synonyms_by_transitivity"]], "positive_sampling() (deeponto.onto.text.thesaurus.thesaurus static method)": [[21, "deeponto.onto.text.thesaurus.Thesaurus.positive_sampling"]], "positive_sampling_from_paired_groups() (deeponto.onto.text.thesaurus.thesaurus static method)": [[21, "deeponto.onto.text.thesaurus.Thesaurus.positive_sampling_from_paired_groups"]], "prep_labs() (in module deeponto.onto.text.text_utils)": [[21, "deeponto.onto.text.text_utils.prep_labs"]], "random_negative_sampling() (deeponto.onto.text.thesaurus.thesaurus static method)": [[21, "deeponto.onto.text.thesaurus.Thesaurus.random_negative_sampling"]], "random_negative_sampling_from_paired_groups() (deeponto.onto.text.thesaurus.thesaurus static method)": [[21, "deeponto.onto.text.thesaurus.Thesaurus.random_negative_sampling_from_paired_groups"]], "sib_labs() (in module deeponto.onto.text.text_utils)": [[21, "deeponto.onto.text.text_utils.sib_labs"]], "tokenize_all() (deeponto.onto.text.tokenizer.tokenizer method)": [[21, "deeponto.onto.text.tokenizer.Tokenizer.tokenize_all"]], "unfold_iri() (in module deeponto.onto.text.text_utils)": [[21, "deeponto.onto.text.text_utils.unfold_iri"]], "rangenode (class in deeponto.utils.tree)": [[22, "deeponto.utils.tree.RangeNode"]], "runtimeformatter (class in deeponto.utils.logging)": [[22, "deeponto.utils.logging.RuntimeFormatter"]], "banner_msg() (in module deeponto.utils.logging)": [[22, "deeponto.utils.logging.banner_msg"]], "create_logger() (in module deeponto.utils.logging)": [[22, "deeponto.utils.logging.create_logger"]], "create_path() (in module deeponto.utils.general_utils)": [[22, "deeponto.utils.general_utils.create_path"]], "credit() (in module deeponto.utils.logging)": [[22, "deeponto.utils.logging.credit"]], "data_split() (in module deeponto.utils.general_utils)": [[22, "deeponto.utils.general_utils.data_split"]], "deeponto.utils": [[22, "module-deeponto.utils"]], "deeponto.utils.general_utils": [[22, "module-deeponto.utils.general_utils"]], "deeponto.utils.logging": [[22, "module-deeponto.utils.logging"]], "deeponto.utils.oaei_utils": [[22, "module-deeponto.utils.oaei_utils"]], "deeponto.utils.tree": [[22, "module-deeponto.utils.tree"]], "detect_path() (in module deeponto.utils.general_utils)": [[22, "deeponto.utils.general_utils.detect_path"]], "evenly_divide() (in module deeponto.utils.general_utils)": [[22, "deeponto.utils.general_utils.evenly_divide"]], "formattime() (deeponto.utils.logging.runtimeformatter method)": [[22, "deeponto.utils.logging.RuntimeFormatter.formatTime"]], "get_device() (in module deeponto.utils.general_utils)": [[22, "deeponto.utils.general_utils.get_device"]], "insert_child() (deeponto.utils.tree.rangenode method)": [[22, "deeponto.utils.tree.RangeNode.insert_child"]], "load_prompt_data() (in module deeponto.utils.general_utils)": [[22, "deeponto.utils.general_utils.load_prompt_data"]], "parse_tuple() (in module deeponto.utils.general_utils)": [[22, "deeponto.utils.general_utils.parse_tuple"]], "print_choices() (in module deeponto.utils.general_utils)": [[22, "deeponto.utils.general_utils.print_choices"]], "print_tree() (deeponto.utils.tree.rangenode method)": [[22, "deeponto.utils.tree.RangeNode.print_tree"]], "rand_sample_excl() (in module deeponto.utils.general_utils)": [[22, "deeponto.utils.general_utils.rand_sample_excl"]], "read_jsonl() (in module deeponto.utils.general_utils)": [[22, "deeponto.utils.general_utils.read_jsonl"]], "read_oaei_mappings() (in module deeponto.utils.oaei_utils)": [[22, "deeponto.utils.oaei_utils.read_oaei_mappings"]], "read_table() (in module deeponto.utils.general_utils)": [[22, "deeponto.utils.general_utils.read_table"]], "run_jar() (in module deeponto.utils.general_utils)": [[22, "deeponto.utils.general_utils.run_jar"]], "set_seed() (in module deeponto.utils.general_utils)": [[22, "deeponto.utils.general_utils.set_seed"]], "sort_by_start() (deeponto.utils.tree.rangenode static method)": [[22, "deeponto.utils.tree.RangeNode.sort_by_start"]], "sort_dict_by_values() (in module deeponto.utils.general_utils)": [[22, "deeponto.utils.general_utils.sort_dict_by_values"]], "split_java_identifier() (in module deeponto.utils.general_utils)": [[22, "deeponto.utils.general_utils.split_java_identifier"]], "to_identifier() (in module deeponto.utils.general_utils)": [[22, "deeponto.utils.general_utils.to_identifier"]], "uniqify() (in module deeponto.utils.general_utils)": [[22, "deeponto.utils.general_utils.uniqify"]]}})